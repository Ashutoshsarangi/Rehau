{"version":3,"file":"rehau-functional-core.umd.js.map","sources":["ng://rehau-functional-core/lib/stores/onboarding-steps/action/onboarding-step.actions.ts","ng://rehau-functional-core/lib/rehau-functional-core.service.ts","ng://rehau-functional-core/lib/services/config-service/config-service.module.ts","node_modules/tslib/tslib.es6.js","ng://rehau-functional-core/lib/services/logger-service/logger.service.ts","ng://rehau-functional-core/lib/services/config-service/config-service.ts","ng://rehau-functional-core/lib/services/translate-service/translate-service.module.ts","ng://rehau-functional-core/lib/services/translate-service/translate-service.ts","ng://rehau-functional-core/lib/rehau-functional-core.module.ts","ng://rehau-functional-core/lib/stores/onboarding-steps/reducer/onboarding-step.reducer.ts","ng://rehau-functional-core/lib/stores/auth/action/auth.action.ts","ng://rehau-functional-core/lib/stores/auth/reducer/auth.reducer.ts","ng://rehau-functional-core/lib/stores/loader/action/loader.action.ts","ng://rehau-functional-core/lib/stores/loader/reducer/loader.reducer.ts","ng://rehau-functional-core/lib/stores/reducer-composition.ts","ng://rehau-functional-core/lib/services/cache-service/cache.service.ts","ng://rehau-functional-core/lib/providers/cidaas.provider.ts","ng://rehau-functional-core/lib/services/web-service/web.service.ts","ng://rehau-functional-core/lib/config/local-storage.config.ts","ng://rehau-functional-core/lib/services/store-service/store.service.ts","ng://rehau-functional-core/lib/services/auth-service/auth.service.ts","ng://rehau-functional-core/lib/config/cidaas.config.ts","ng://rehau-functional-core/lib/services/login-service/login.service.ts","ng://rehau-functional-core/lib/services/auth-service/auth-guard.service.ts","ng://rehau-functional-core/lib/services/route-animation/route-animation.ts","ng://rehau-functional-core/lib/services/on-boarding-serice/on-boarding.service.ts","ng://rehau-functional-core/lib/models/getway.model.ts","ng://rehau-functional-core/lib/services/gateway-service/gatewayAcl.service.ts","ng://rehau-functional-core/lib/services/gateway-service/gateway.service.ts","ng://rehau-functional-core/lib/services/gateway-service/gatewayDeviceControl.service.ts","ng://rehau-functional-core/lib/services/onlineOffline-service/onlineOffline.service.ts","ng://rehau-functional-core/lib/services/leakage-helper-service/settings.service.ts","ng://rehau-functional-core/lib/models/zAutomation.model.ts","ng://rehau-functional-core/lib/services/zAutomation-service/zAutomation.service.ts"],"sourcesContent":["import { createAction, props } from '@ngrx/store';\n\nexport const onBoardingNextStep = createAction('[OnBoarding Step] Manage Next Step', props<{ payload: any }>());\nexport const onBoardingBackStep = createAction('[OnBoarding Step] Manage Back Step', props<{ payload: any }>());\n","\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Store, select } from '@ngrx/store';\nimport { onBoardingNextStep } from './stores/onboarding-steps/action/onboarding-step.actions';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RehauFunctionalCoreService {\n\n  onBoardingData$: Observable<any[]>;\n  constructor(private store: Store<{ onBoardingData: any[] }>) {\n    this.onBoardingData$ = store.pipe(select('onBoardingData'));\n  }\n\n\n  showSuccess() {\n    this.onBoardingData$.subscribe((data) => {\n      console.log('this is list of onBoardings from App.component -->', data);\n    });\n    this.store.dispatch(onBoardingNextStep({ payload: { configPosition: 6 } }));\n  }\n}\n","import { ConfigService } from './config-service';\n\n\nexport function CONFIG_FACTORY(configService: ConfigService): any {\n  return () => configService.initConfig();\n}\n\nexport class ConfigServiceModule {\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","// IONIC - ANGULAR\nimport { Injectable, Inject } from '@angular/core';\nimport { DEBUG_LOG_ON, _DEV_ } from '../../config/app-setting.config';\n\n@Injectable()\n\nexport class LogService {\n  /**\n   * @description This Method is for general console logs\n   * @param content is the text you want to print as console\n   */\n  log(...content) {\n    if (!DEBUG_LOG_ON && !_DEV_) {\n      return;\n    }\n\n    console.log('✅ ', ...content);\n  }\n  /**\n   * @description This Method is for error console logs\n   * @param content is the text you want to print as console\n   */\n  log_e(...content) {\n    if (!DEBUG_LOG_ON && !_DEV_) {\n      return;\n    }\n\n    console.log('🚫❗️ ', ...content);\n  }\n\n  /**\n   * @description This Method is for warning console logs\n   * @param content is the text you want to print as console\n   */\n  log_w(...content) {\n    if (!DEBUG_LOG_ON && !_DEV_) {\n      return;\n    }\n\n    console.log('🔶 ', ...content);\n  }\n\n\n  /**\n   * @description This Method is for debugging console logs\n   * @param content is the text you want to print as console\n   */\n  log_d(...content) {\n    if (!DEBUG_LOG_ON && !_DEV_) {\n      return;\n    }\n\n    console.log('🔷 TODO: ', ...content);\n  }\n\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { AppConfig } from '../../models/app-config.model';\nimport { LogService } from '../logger-service/logger.service';\n\nexport class EnvData {\n  public env: any = 'development';\n}\n\nexport class BU {\n  public name: string;\n  public pass: string;\n}\n\nconst SERVICE_NAME = 'ConfigService';\n\n/**\n * @description Service for configuring global properties\n */\n@Injectable()\nexport class ConfigService {\n  protected conFig: any; // ConfigInterface\n  public enviRonment: EnvData;\n  protected actions: string[];\n\n  constructor(\n    @Inject('SERVICE_CONFIG') public configuration: AppConfig,\n    private logService: LogService\n  ) { }\n\n  public initConfig() {\n    this.conFig = this.configuration;\n    this.logService.log('Configuration data loaded1: ', this.conFig);\n  }\n\n}\n","import { TranslationService } from './translate-service';\n\n// Localisation\nimport { TranslateModule, TranslateLoader, TranslateService } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\n\n// export function HttpLoaderFactory(http: HttpClient) {\n//   return new TranslateHttpLoader(http);\n\n// }\nexport function HttpLoaderFactory(http: HttpClient) {\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\n}\n\nexport function TRANSLATE_FACTORY(configService: TranslationService): any {\n  return () => configService.initTranslation();\n}\n@NgModule({\n  imports: [\n    HttpClientModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: HttpLoaderFactory,\n        deps: [HttpClient]\n      }\n    }),\n  ],\n  exports: [\n    TranslateModule,\n  ]\n})\nexport class TranslateServiceModule {\n}\n","import { EventEmitter, Inject, Injectable } from '@angular/core';\nimport {\n  DefaultLangChangeEvent,\n  LangChangeEvent,\n  TranslateLoader,\n  TranslateService,\n  TranslationChangeEvent\n} from '@ngx-translate/core';\n\nimport { Observable, Subject, Subscriber } from 'rxjs';\nimport { LogService } from '../logger-service/logger.service';\nimport { isBoolean } from 'util';\n\n@Injectable()\nexport class TranslationService {\n  constructor(\n    private translateService: TranslateService, @Inject('SERVICE_CONFIG') public configuration: any,\n    private logService: LogService) { }\n\n  public initTranslation(): void {\n    this.logService.log('I am Init Translator', this.configuration);\n    if (this.configuration) {\n      this.logService.log('I am in config', this.configuration);\n      if (!!this.configuration.globalConfig.languages) {\n        this.addLangs(this.splitLanguages(this.configuration.globalConfig.languages));\n      }\n      if (!!this.configuration.globalConfig.defaultLanguage) {\n        this.setDefaultLang(this.configuration.globalConfig.defaultLanguage);\n      }\n      if (!!this.configuration.globalConfig.currentLanguage) {\n        this.logService.log('Hey Its TRUE I need to be called');\n        this.use(this.configuration.globalConfig.currentLanguage);\n      }\n    } else {\n      this.logService.log('No configuration provided. This service has not default values. Set them before use.');\n    }\n  }\n\n  private splitLanguages(langs: string): Array<string> {\n    let availableLanguages: Array<string> = langs.split('|');\n    return (availableLanguages = availableLanguages.filter(x => x.length > 0));\n  }\n\n  public currentLang(): string {\n    return this.translateService.currentLang;\n  }\n\n  public currentLoader(): TranslateLoader {\n    return this.translateService.currentLoader;\n  }\n\n  public onLangChange(): EventEmitter<LangChangeEvent> {\n    return this.translateService.onLangChange;\n  }\n\n  public onTranslationChange(): EventEmitter<TranslationChangeEvent> {\n    return this.translateService.onTranslationChange;\n  }\n\n  public onDefaultLangChange(): EventEmitter<DefaultLangChangeEvent> {\n    return this.translateService.onDefaultLangChange;\n  }\n  // #endregion\n\n  /**\n   * @description Sets the default language to use as a fallback\n   * @param lang language parameter needed\n   */\n  public setDefaultLang(lang: string): void {\n    this.translateService.setDefaultLang(lang);\n  }\n\n  /**\n   * @description Gets the default language\n   */\n  public getDefaultLang(): string {\n    return this.translateService.getDefaultLang();\n  }\n\n  /**\n   * @description Changes the lang currently used\n   * @param lang language parameter needed\n   */\n  public use(lang: string): Observable<any> {\n    this.logService.log('The Use Function is called  ---> ', lang);\n    return this.translateService.use(lang);\n  }\n\n  /**\n   * @description Gets an object of translations for a given language with the current loader\n   * @param lang language parameter needed\n   */\n  public getTranslation(lang: string): Observable<any> {\n    return this.translateService.getTranslation(lang);\n  }\n\n  /**\n   * @description Add new langs to the list\n   * @param langs language parameter needed\n   */\n  public addLangs(langs: Array<string>): void {\n    this.translateService.addLangs(langs);\n  }\n\n  /**\n   * @description Returns an array of currently available langs\n   */\n  public getLangs(): Array<string> {\n    return this.translateService.getLangs();\n  }\n  /**\n   * @description Calls resetLang and retrieves the translations object for the current loader\n   * @param lang language parameter needed\n   */\n  public reloadLang(lang: string): Observable<string | object> {\n    return this.translateService.reloadLang(lang);\n  }\n\n  /**\n   * @description Removes the current translations for this lang.\n   * @description You will have to call use, reloadLang or getTranslation again to be able to get translations\n   * @param lang language parameter needed\n   */\n  public resetLang(lang: string): void {\n    this.translateService.resetLang(lang);\n  }\n\n  /**\n   * @description Returns the current browser lang if available, or undefined otherwise\n   */\n  public getBrowserLang(): string | undefined {\n    return this.translateService.getBrowserLang();\n  }\n\n  /**\n   * @description Returns the current browser culture language name (e.g. 'de-DE' if available, or undefined otherwise\n   */\n  public getBrowserCultureLang(): string | undefined {\n    return this.getBrowserCultureLang();\n  }\n\n  /**\n   * @description Gets the translated value of a key (or an array of keys) or the key if the value was not found\n   * @param key key of the json value\n   * @param interpolateParams Object Optional\n   */\n  public get(key: string | Array<string>, interpolateParams?: object): Observable<string | object> {\n    return this.translateService.get(key, interpolateParams);\n  }\n  /**\n   * @description Gets the instant translated value of a key (or an array of keys). /!\\ This method is synchronous and the\n   * default file loader is asynchronous.\n   * @description You are responsible for knowing when your translations have been loaded and it is safe to use this method.\n   * @description If you are not sure then you should use the get method instead\n   * @param key Key for the service\n   */\n  public instant(key: string): Observable<any> {\n    return new Observable(subscriber => {\n      console.log('Hello **********************');\n      subscriber.next(this.translateService.instant(key));\n    });\n  }\n  /**\n   * @description Gets the instant translated value of a key (or an array of keys). /!\\ This method is synchronous and the\n   * default file loader is asynchronous.\n   * @description You are responsible for knowing when your translations have been loaded and it is safe to use this method.\n   * @description If you are not sure then you should use the get method instead\n   * @param key Key for the service\n   */\n  public instantObject(item: object): Observable<any> {\n    if (Array.isArray(item)) {\n      const temp = [];\n      for (const element of item) {\n        temp.push(this.mainInstant(element));\n      }\n      return new Observable(subscriber => {\n        console.log('Hello ######################');\n        subscriber.next(temp);\n      });\n    } else {\n      return new Observable(subscriber => {\n        console.log('Hello $$$$$$$$$$$$$$$$$$$$$$');\n        subscriber.next(this.mainInstant(item));\n      });\n    }\n  }\n\n  /**\n   * @description Gets the instant value of each key in the object\n   * @param object which need to be translated\n   */\n  public mainInstant(item: object): object {\n    const temp = {};\n    for (const key in item) {\n      if (item.hasOwnProperty(key)) {\n        const keyVal = item[key];\n        if (typeof keyVal === 'string' && keyVal.length > 0) {\n          const val = this.translateService.instant(keyVal);\n          temp[key] = val;\n        } else {\n          temp[key] = keyVal;\n        }\n      }\n    }\n    return temp;\n  }\n}\n","import { NgModule, ModuleWithProviders, APP_INITIALIZER, forwardRef, Optional, SkipSelf } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CONFIG_FACTORY } from './services/config-service/config-service.module';\nimport { ConfigService } from './services/config-service/config-service';\nimport { AppConfig } from './models/app-config.model';\nimport { TRANSLATE_FACTORY, TranslateServiceModule } from './services/translate-service/translate-service.module';\nimport { TranslationService } from './services/translate-service/translate-service';\n\n@NgModule({\n  declarations: [],\n  imports: [],\n  exports: [\n    TranslateServiceModule\n  ]\n})\nexport class RehauFunctionalCoreModule {\n  public static forRoot(SERVICE_CONFIG: AppConfig): ModuleWithProviders<RouterModule> {\n    return {\n      ngModule: RehauFunctionalCoreModule,\n      providers: [\n        { provide: 'SERVICE_CONFIG', useValue: SERVICE_CONFIG },\n        {\n          provide: APP_INITIALIZER,\n          useFactory: CONFIG_FACTORY,\n          deps: [forwardRef(() => ConfigService)],\n          multi: true\n        },\n        {\n          provide: APP_INITIALIZER,\n          useFactory: TRANSLATE_FACTORY,\n          deps: [forwardRef(() => TranslationService)],\n          multi: true\n        },\n        ConfigService,\n      ]\n    };\n  }\n\n}\n","import { Action, createReducer, on } from '@ngrx/store';\nimport { onBoardingBackStep, onBoardingNextStep } from '../action/onboarding-step.actions';\n\nexport const initialState = {\n  configPosition: 0\n};\nconst Reducer = createReducer(\n  initialState,\n  on(onBoardingNextStep, (state, { payload }) =>\n    ({ configPosition: payload.configPosition + 1 })),\n  on(onBoardingBackStep, (state, { payload }) =>\n    ({ configPosition: payload.configPosition - 1 }))\n);\n\nexport function onBoardingReducer(state: any | undefined, action: Action) {\n  return Reducer(state, action);\n}\n","import { createAction, props } from '@ngrx/store';\nimport { CidaasState } from '../../../models/auth.model';\n\nexport const userInfoAction = createAction('User info from CIDAAS', props<{ payload: CidaasState }>());\n\n","import { Action, createReducer, on } from '@ngrx/store';\nimport { userInfoAction } from '../action/auth.action';\nimport { CidaasState } from '../../../models/auth.model';\n\nexport const initialState: CidaasState = {\n  userInfo: {}\n};\nconst Reducer = createReducer(\n  initialState,\n  on(userInfoAction, (state, { payload }) =>\n    ({ userInfo: { ...payload.userInfo } }))\n);\n\nexport function cidaasReducer(state: CidaasState | undefined, action: Action) {\n  return Reducer(state, action);\n}\n","import { createAction, props } from '@ngrx/store';\n\nexport const loaderAction = createAction('Show-Hide laoder', props<{ payload: boolean }>());\n\n\n\n","import { Action, createReducer, on } from '@ngrx/store';\nimport { loaderAction } from '../action/loader.action';\n\nexport interface State {\n  showLoader: boolean;\n}\n\nexport const initialState: State = {\n    showLoader: false,\n  };\n\nconst Reducer = createReducer(\n  initialState,\n  on(loaderAction, state => ({ ...state })),\n);\n\nexport function loaderReducer(state: State | undefined, action: Action) {\n    return Reducer(state, action);\n}\n","import { ActionReducerMap } from '@ngrx/store';\n\nimport { onBoardingReducer } from './onboarding-steps/reducer/onboarding-step.reducer';\nimport { cidaasReducer } from './auth/reducer/auth.reducer';\nimport { loaderReducer } from './loader/reducer/loader.reducer';\n\nexport interface IAppState {\n  onBoardingData: any;\n  cidaasData: any;\n  loaderState: any;\n}\n\nexport const reducers: ActionReducerMap<IAppState> = {\n  onBoardingData: onBoardingReducer,\n  cidaasData: cidaasReducer,\n  loaderState: loaderReducer\n};\n","// IONIC - ANGULAR\nimport { Inject, Injectable } from '@angular/core';\nimport SimpleCrypto from 'simple-crypto-js';\n\n\n@Injectable()\nexport class CacheService {\n  constructor( @Inject('SERVICE_CONFIG') public configuration: any ) {\n  }\n  simpleCrypto = new SimpleCrypto(this.configuration.globalConfig.SECRET_KEY);\n\n  /**\n   * @description This Method is required for Removing particular data from local storage.\n   * @param key  is required for the removing particular data\n   */\n  removeLocalData(key: string) {\n    localStorage.removeItem(key);\n  }\n\n  /**\n   * @description This Method is required for getting Local storage Data.\n   * @param Key This is required for the geting particular data with crypted formated.\n   */\n  getLocalData(key: string) {\n    // Set the second paramter to true, then it will return object instead of string\n    if (localStorage.getItem(key)) {\n      return this.simpleCrypto.decrypt(localStorage.getItem(key), true);\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * @description This Method is for setting Key, Value pair in the Local storage.\n   * @param key is used for the storeing data.\n   * @param value is the Actual value which need to be encrypted befor store.\n   */\n  setLocalData(key: string, value: any) {\n    const encrypted = this.simpleCrypto.encrypt(value);\n    localStorage.setItem(key, encrypted);\n  }\n}\n","import { OAuthProvider } from 'ionic-cordova-oauth/dist/provider';\nimport { IcidaasProviderOptions } from '../models/cidaas.model';\nimport shajs from 'sha.js';\n\n\n// @dynamic\nexport class CidaasProvider extends OAuthProvider {\n  static CLIENT_ID = '9feab210-c025-406d-a10c-3d8323214491';\n  static baseURL = 'https://accounts.rehau.com';\n  static tokenEndpoint = CidaasProvider.baseURL + '/token-srv/token';\n  revokeUrl = CidaasProvider.baseURL + '/authz-srv/revoke';\n\n\n  options: IcidaasProviderOptions;\n  protected authUrl = CidaasProvider.baseURL + '/authz-srv/authz';\n  protected defaults: object = {\n    responseType: 'code'\n  };\n  static base64URLEncode(str): string {\n    return str.toString('base64')\n      .replace(/\\+/g, '-')\n      .replace(/\\//g, '_')\n      .replace(/=/g, '');\n  }\n  constructor(options: IcidaasProviderOptions = {}) {\n    super(options);\n\n    if (!options.appScope || options.appScope.length <= 0) {\n      throw new Error(`A ${this.name} app scope must exist`);\n    }\n  }\n\n  sha256(buffer) {\n    return shajs('sha256').update(buffer).digest();\n  }\n\n  private removeParam(key, sourceURL) {\n    let rtn = sourceURL.split('?')[0];\n    let param = '';\n    let paramsArr = [];\n    const queryString = (sourceURL.indexOf('?') !== -1) ? sourceURL.split('?')[1] : '';\n    if (queryString !== '') {\n      paramsArr = queryString.split('&');\n      for (let i = paramsArr.length - 1; i >= 0; i -= 1) {\n        param = paramsArr[i].split('=')[0];\n        if (param === key) {\n          paramsArr.splice(i, 1);\n        }\n      }\n      rtn = rtn + '?' + paramsArr.join('&');\n    }\n    return rtn;\n  }\n\n  private addParam(key, sourceURL) {\n    sourceURL += `&scope=`;\n    sourceURL += `${this.options.appScope.join(' ')}`;\n    return sourceURL;\n  }\n\n  protected optionsToDialogUrl(options) {\n    let url = super.optionsToDialogUrl(options);\n    url = this.removeParam('scope', url);\n    url = this.addParam('scope', url);\n    if (options.authType) {\n      url += `&auth_type=${options.authType}`;\n    }\n    if (options.nonce) {\n      url += `&nonce=${options.nonce}`;\n    }\n    if (options.code_challenge_method === 'plain') {\n      url += `&code_challenge=${options.code_challenge}&code_challenge_method=${options.code_challenge_method}`;\n    }\n    if (options.code_challenge_method === 'S256') {\n      url += `&code_challenge=${\n        CidaasProvider.base64URLEncode(this.sha256(options.code_challenge))\n        }&code_challenge_method=${options.code_challenge_method}`;\n    }\n    if (options.viewType) {\n      url += `&view_type=${options.viewType}`;\n    }\n    console.log('Calling URL: ' + url);\n    return url;\n  }\n\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { retryBackoff } from 'backoff-rxjs';\nimport { timeout } from 'rxjs/operators';\nimport { LogService } from '../logger-service/logger.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WebService {\n\n  constructor(\n    private http: HttpClient,\n    private logService: LogService,\n    @Inject('SERVICE_CONFIG') public configuration: any,\n  ) { }\n\n  BASE_URL = this.configuration.globalConfig.BASE_URL;\n  // getApi(), postApi() are responsible for Main Api cals depending on the Http methods\n\n  // /**\n  //  * @description This method is for Get Api Calls\n  //  * @param endPoint String Just need to pass the Endpoint\n  //  * @returns This function returns the respective response from the Api\n  //  */\n  // getApi(endPoint, retryConfig: any = {}): Observable<any> {\n  //   if (Object.keys(retryConfig).length !== 0) {\n  //     return this.http.get(this.BASE_URL + endPoint).pipe(\n  //       timeout(retryConfig.REQ_TIMEOUT),\n  //       retryBackoff({\n  //         initialInterval: retryConfig.INIT_INTERVAL,\n  //         maxInterval: retryConfig.MAX_INTERVAL,\n  //         maxRetries: retryConfig.MAX_RETRIES,\n  //         shouldRetry: error => {\n  //           this.logService.log_w('Aborted remote request');\n  //           return true;\n  //         },\n  //         backoffDelay: (iteration, initialInterval) =>\n  //           Math.pow(1.5, iteration) * initialInterval\n  //       })\n  //     );\n  //   } else {\n  //     return this.http.get(this.BASE_URL + endPoint);\n  //   }\n  // }\n\n  /**\n   * @description This method is for Post Api calls\n   * @param endPoint String Api Endpoint need to pass\n   * @param data Object required for the Post request\n   * @returns Return the respective responce from the Apis.\n   */\n  // postApi(endPoint, data, retryConfig: any = {}): Observable<any> {\n  //   if (Object.keys(retryConfig).length !== 0) {\n  //     return this.http.post(this.BASE_URL + endPoint, data).pipe(\n  //       timeout(retryConfig.REQ_TIMEOUT),\n  //       retryBackoff({\n  //         initialInterval: retryConfig.INIT_INTERVAL,\n  //         maxInterval: retryConfig.MAX_INTERVAL,\n  //         maxRetries: retryConfig.MAX_RETRIES,\n  //         shouldRetry: error => {\n  //           this.logService.log_w('Aborted remote request');\n  //           return true;\n  //         },\n  //         backoffDelay: (iteration, initialInterval) =>\n  //           Math.pow(1.5, iteration) * initialInterval\n  //       })\n  //     );\n  //   } else {\n  //     return this.http.post(this.BASE_URL + endPoint, data);\n  //   }\n  // }\n\n  /**\n   * @description This method is for Get Api Calls\n   * @param url String url for the API\n   * @param httpOptions header part is optional\n   * @param retryConfig is the object if want to hit API multiple time after failure\n   * @returns This function returns the respective response from the Api\n   */\n  getApi(url, httpOptions: any = {}, retryConfig: any = {}): Observable<any> {\n    if (Object.keys(retryConfig).length !== 0) {\n      return this.http.get(url, httpOptions).pipe(\n        timeout(retryConfig.REQ_TIMEOUT),\n        retryBackoff({\n          initialInterval: retryConfig.INIT_INTERVAL,\n          maxInterval: retryConfig.MAX_INTERVAL,\n          maxRetries: retryConfig.MAX_RETRIES,\n          shouldRetry: error => {\n            this.logService.log_w('Aborted remote request');\n            return true;\n          },\n          backoffDelay: (iteration, initialInterval) =>\n            Math.pow(1.5, iteration) * initialInterval\n        })\n      );\n    } else {\n      return this.http.get(url, httpOptions);\n    }\n  }\n\n  /**\n   * This method is for Post Api calls\n   * @param url String Api URL\n   * @param requestBody Object required for the Post request\n   * @param httpOptions header part is optional\n   * @param retryConfig is the object if want to hit API multiple time after failure\n   * @returns Return the respective responce from the Apis.\n   */\n  postApi(url, requestBody, httpOptions: any = {}, retryConfig: any = {}): Observable<any> {\n    console.log(url, 'url');\n    console.log(requestBody, 'requestBody');\n    console.log(httpOptions, 'httpOptions');\n    if (Object.keys(retryConfig).length !== 0) {\n      return this.http.post(\n        url,\n        requestBody,\n        httpOptions\n      ).pipe(\n        timeout(retryConfig.REQ_TIMEOUT),\n        retryBackoff({\n          initialInterval: retryConfig.INIT_INTERVAL,\n          maxInterval: retryConfig.MAX_INTERVAL,\n          maxRetries: retryConfig.MAX_RETRIES,\n          shouldRetry: error => {\n            console.log('Aborted remote request');\n            return true;\n          },\n          backoffDelay: (iteration, initialInterval) =>\n            Math.pow(1.5, iteration) * initialInterval\n        })\n      );\n    } else {\n      return this.http.post(url, requestBody, httpOptions);\n    }\n  }\n\n  /**\n   * This method is for Request Api calls\n   * @param method String method need to pass in request API\n   * @param url String API URL\n   * @param httpOptions header details is optional\n   * @param retryConfig is the object if want to hit API multiple time after failure. it is optional\n   * @returns Return the respective responce from the Apis.\n   */\n  requestApi(method, url, httpOptions, retryConfig: any = {}): Observable<any> {\n    if (Object.keys(retryConfig).length !== 0) {\n      return this.http.request(method, url, httpOptions).pipe(\n        timeout(retryConfig.REQ_TIMEOUT),\n        retryBackoff({\n          initialInterval: retryConfig.INIT_INTERVAL,\n          maxInterval: retryConfig.MAX_INTERVAL,\n          maxRetries: retryConfig.MAX_RETRIES,\n          shouldRetry: error => {\n            // this.logService.log_w('Aborted remote request');\n            console.log('Aborted remote request');\n            return true;\n          },\n          backoffDelay: (iteration, initialInterval) =>\n            Math.pow(1.5, iteration) * initialInterval\n        })\n      );\n    } else {\n      return this.http.post(method, url, httpOptions);\n      // return this.postApi(url, {}, httpOptions);\n    }\n  }\n\n}\n","export const userData = 'USERDATA';\n","// IONIC - ANGULAR\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { Store, select } from '@ngrx/store';\nimport { userInfoAction } from '../../stores/auth/action/auth.action';\nimport { CidaasState } from '../../models/auth.model';\nimport { LogService } from '../logger-service/logger.service';\nimport { loaderAction } from '../../stores/loader/action/loader.action';\n\n\nexport const LoaderFlag = new Subject();\n@Injectable()\n\nexport class StoreService {\n  userData$: Observable<CidaasState>;\n  showLoader$: Observable<boolean>;\n  constructor(\n    private store: Store<{ cidaasData: CidaasState, loaderState: boolean }>,\n    private logService: LogService\n  ) {\n    this.userData$ = this.store.pipe(select('cidaasData'));\n    this.showLoader$ = store.pipe(select('loaderState'));\n  }\n\n  dispatchUserData(Data) {\n    this.store.dispatch(userInfoAction({ payload: { userInfo: Data } }));\n  }\n\n  /**\n   * @description This function will return the latest state of userData from store\n   * @returns object of user data\n   */\n  async getUserData() {\n    let userData;\n    this.userData$.subscribe((data) => {\n      if (Object.keys(data.userInfo).length > 0) {\n        userData = data.userInfo;\n      }\n    });\n\n    return userData;\n  }\n\n  /**\n   * @description This function will update the state of loader\n   * @param state is the value of state to dispatch\n   */\n  dispatchLoaderState(state) {\n    this.logService.log('in dispatch method tab loader state', state);\n    this.store.dispatch(loaderAction(state));\n    LoaderFlag.next(state);\n  }\n\n  /**\n   * @description This function will return the latest state of loader\n   * @returns current loader state\n   */\n  async getLoaderState() {\n    let loaderState;\n    this.showLoader$.subscribe((state) => {\n        loaderState = state;\n    });\n    this.logService.log('in get loader state --->', loaderState);\n    LoaderFlag.next(loaderState.showLoader);\n    return loaderState.showLoader;\n  }\n\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { ITokenEndpointBody, ITokenEndpointResponse } from '../../models/cidaas.model';\nimport { CidaasProvider } from '../../providers/cidaas.provider';\nimport { WebService } from '../web-service/web.service';\nimport { CacheService } from '../cache-service/cache.service';\nimport { userData } from '../../config/local-storage.config';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { LogService } from '../logger-service/logger.service';\nimport { StoreService } from '../store-service/store.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private tokenPromise: Promise<boolean>;\n\n  constructor(\n    private webService: WebService,\n    private cacheService: CacheService,\n    private logservice: LogService,\n    private storeService: StoreService,\n    @Inject('SERVICE_CONFIG') public configuration: any\n  ) { }\n\n  async oAuthCallback(body: ITokenEndpointBody, message: string): Promise<void> {\n    const response: any = await this.getToken(body, message);\n    return response;\n  }\n\n  /**\n   * @description This function is responsible to call postAPI method to get the new token\n   * @returns object of ITokenEndpointResponse\n   */\n  async tokenRequest(body: ITokenEndpointBody): Promise<ITokenEndpointResponse> {\n    return this.webService.postApi(this.configuration.cidaasConfig.ciddasTokenEndpoint, body).toPromise();\n\n  }\n\n  /**\n   * @description This function will call the token request method to get new token\n   * @description And will store the user data in store and local storage\n   * @returns object of user data\n   */\n  private async getToken(body, message): Promise<any> {\n    try {\n      const response: ITokenEndpointResponse = await this.tokenRequest(body);\n      if (!response.access_token || !response.refresh_token) {\n        // Here We clean the User Object from Local Storage and Store.\n        this.storeService.dispatchUserData({});\n        this.cacheService.removeLocalData(userData);\n        return response;\n      } else {\n        body.access_token = response.access_token;\n        body.refresh_token = response.refresh_token;\n        // Here We Set the User Object in Local Storage and Store.\n        this.storeService.dispatchUserData(body);\n        this.cacheService.setLocalData(userData, body);\n        return body;\n      }\n\n    } catch (e) {\n      if (e.error instanceof ErrorEvent) {\n        this.logservice.log_e('An error occurred for getting ' + message + ':', e.error.message);\n        this.logservice.log('Never the less leave the use do its thing without tokens');\n        body.status = e.status;\n        body.message = e.error.message;\n        return body;\n      } else if (e.status === 0) {\n        this.logservice.log_e('An error occurred for getting ' + message + ':', e.error.message);\n        this.logservice.log('Never the less leave the use do its thing without tokens');\n        body.status = e.status;\n        body.message = e.error.message;\n        return body;\n      } else if (e.status === 408) {\n        this.logservice.log_e(\n          'An error occurred for getting ' + message + ':',\n          e.error.message\n        );\n        this.logservice.log('Never the less leave the use do its thing without tokens');\n        body.status = e.status;\n        body.message = e.error.message;\n        return body;\n      } else {\n        this.logservice.log_e(\n          `Backend returned code for getting ${message} ${e.status}, ` +\n          `body was for getting ${message} : ${e.error}`\n        );\n        this.storeService.dispatchUserData({});\n        this.cacheService.removeLocalData(userData);\n        // await this.logoutService.doLogout();\n        return body;\n      }\n    }\n  }\n\n  // tslint:disable-next-line:jsdoc-format\n  /**\n   * @description This function will check whether user is new or existing.\n   * @description If user is existing then this function will get the current or refreshed token\n   * @returns boolean value based on expired\n   */\n  async isLoggedIn(): Promise<boolean> {\n    const currentUserFromStore = await this.storeService.getUserData();\n    const currentUser: any = this.cacheService.getLocalData(userData);\n    this.logservice.log('User data from local storage = ', currentUser);\n    this.logservice.log('User data from store = ', currentUserFromStore);\n\n    if (currentUserFromStore && currentUser) {\n      const res = await this.checkTokenStatus(currentUser);\n      return res;\n    } else if (currentUserFromStore && !currentUser) {  // if data is present in store but not in local stoarge\n      this.cacheService.setLocalData(userData, currentUserFromStore); // update locsal storage\n      const res = await this.checkTokenStatus(currentUserFromStore);\n      return res;\n    } else if (!currentUserFromStore && currentUser) { // if data is present in local storage but not in Store\n      this.storeService.dispatchUserData(currentUser); // update store\n      const res = await this.checkTokenStatus(currentUser);\n      return res;\n    } else {\n      return false;\n    }\n  }\n\n  // tslint:disable-next-line:jsdoc-format\n  /**\n   * @description This function will check the status of token whether it is expired or not\n   * @description If token is expired then it will call refresh token method\n   * @param currentUser is the currentuser object either from store or local storage\n   * @returns boolean value or refresh token object based on condition\n   */\n  async checkTokenStatus(currentUser): Promise<boolean> {\n    const isExpired = this.isTokenExpire(currentUser.access_token);\n    if (isExpired) {\n      this.logservice.log_w('THIS ACCESS_TOKEN IS EXPIRED in Login, try getting new one.');\n      const res = await this.refreshTokenWrapper(currentUser);\n      return res;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * @description This function is required for checking the access_token is expired or not.\n   * @param access_token Need Access_token for checking is it expired\n   * @returns boolean value based on expied\n   */\n  // tslint:disable-next-line:variable-name\n  isTokenExpire(access_token: string): boolean {\n    const helper = new JwtHelperService();\n    return helper.isTokenExpired(access_token);\n  }\n\n  /**\n   * @description This method will get call whenevr we need to refresh the expise token\n   * @param user is the object conatining all CIDAAS login data\n   * @returns object of CIDAAS login data including regresh token\n   */\n  private async refreshTokenWrapper(user): Promise<boolean> {\n    const body: ITokenEndpointBody = {\n      client_id: this.configuration.cidaasConfig.cidaasClientId,\n      grant_type: 'refresh_token',\n      refresh_token: user.refresh_token\n    };\n\n    const result = await this.getToken(body, 'refresh token');\n    return result;\n  }\n\n  /**\n   * @description This method will decide the access token\n   * @returns decoded access token\n   */\n  async getCorrelationId() {\n    const user = await this.getUser();\n    const helper = new JwtHelperService();\n    const decodedToken = helper.decodeToken(user.access_token);\n    return decodedToken.sub;\n  }\n\n  /**\n   * @description This method is to get the userData related to CIDAAS login\n   * @returns object of CIDAAS login data\n   */\n  async getUser() {\n    let user: any = this.cacheService.getLocalData(userData);\n    const helper = new JwtHelperService();\n    if (user) {\n      const isExpired = this.isTokenExpire(user.access_token);\n      if (isExpired) {\n        this.logservice.log(\n          'THIS ACCESS_TOKEN IS EXPIRED in getUser, try getting new one.'\n        );\n        user = await this.refreshTokenWrapper(user);\n        this.logservice.log('refreshTest::got result in getUser ' + user);\n      }\n    }\n    return user;\n  }\n\n}\n","export const cidaasLoginProvider = {\n  appScope: ['email', 'roles', 'profile', 'offline_access'],\n  responseType: 'code',\n  redirectUri: 'http://localhost:8000/callback',\n  code_challenge: '9235487394587-xcode',\n  code_challenge_method: 'S256',\n  nonce: '12345678909876'\n};\nexport const cidaasRegisterProvider = {\n  appScope: ['email', 'roles', 'profile', 'offline_access'],\n  responseType: 'code',\n  redirectUri: 'http://localhost:8000/register',\n  code_challenge: '9235487394587-xcode',\n  code_challenge_method: 'S256',\n  nonce: '1234543267890',\n  viewType: 'register'\n};\n\nexport const bodyParam = { grant_type: 'authorization_code' };\n\nexport const loginDesign = {\n  closebuttoncolor: '#dd0060',\n  hardwareback: 'no',\n  hidenavigationbuttons: 'no',\n  hideurlbar: 'yes',\n  navigationbuttoncolor: '#dd0060',\n  toolbarcolor: '#f7f7f7'\n};\n\nexport const registerDesign = {\n  closebuttoncolor: '#dd0060',\n  hardwareback: 'no',\n  hidenavigationbuttons: 'no',\n  hideurlbar: 'yes',\n  navigationbuttoncolor: '#dd0060',\n  toolbarcolor: '#f7f7f7'\n};\nexport const userObject = {\n  message: '',\n  status: '',\n  accessToken: '',\n  refreshToken: ''\n};\n\n","// IONIC - ANGULAR\nimport { Inject, Injectable } from '@angular/core';\n\n// Importing CIDAAS Provider\nimport { CidaasProvider } from '../../providers/cidaas.provider';\nimport { ITokenEndpointBody } from '../../models/cidaas.model';\nimport { Oauth, OauthBrowser, OauthCordova } from 'ionic-cordova-oauth';\nimport { AuthService } from '../auth-service/auth.service';\nimport { LogService } from '../logger-service/logger.service';\nimport { StoreService } from '../store-service/store.service';\nimport { CacheService } from '../cache-service/cache.service';\nimport { userData } from '../../config/local-storage.config';\n\n// CIDAAS Confi Data\nimport { loginDesign, bodyParam, registerDesign, userObject } from '../../config/cidaas.config';\nimport { throwError } from 'rxjs';\nimport { ConfigService } from '../config-service/config-service';\n\n\n@Injectable()\nexport class LoginService {\n  constructor(\n    private authService: AuthService,\n    private logService: LogService,\n    private configService: ConfigService,\n    private storeService: StoreService,\n    private cacheService: CacheService,\n    @Inject('SERVICE_CONFIG') public configuration: any\n  ) { }\n  oauth: Oauth;\n  // cidaasParam = { clientId: CidaasProvider.CLIENT_ID };\n  cidaasParam = { clientId: this.configuration.cidaasConfig.cidaasClientId };\n  cidaasRegisterProvider = this.configuration.cidaasConfig.cidaasRegisterProvider;\n  cidaasLoginProvider = this.configuration.cidaasConfig.cidaasLoginProvider;\n  cidaasLoginDesign = this.configuration.cidaasConfig.cidaasLoginDesign;\n  cidaasRegisterDesign = this.configuration.cidaasConfig.cidaasRegisterDesign;\n\n  /**\n   * @description This is CIDAAS Authentication main function\n   * @param actionType is the string which indicates the type of action whether it is login or register\n   * @param platform is used to define the platform to use. Default value is browser\n   */\n  async cidaasAuth(actionType, platform = 'browser') {\n    actionType = actionType.trim();\n    let provider;\n    if (actionType === 'register token') {\n      // provider = new CidaasProvider({ ...this.cidaasParam, ...cidaasRegisterProvider });\n      provider = new CidaasProvider({ ...this.cidaasParam, ...this.cidaasRegisterProvider });\n    } else if (actionType === 'login token') {\n      // provider = new CidaasProvider({ ...this.cidaasParam, ...cidaasLoginProvider });\n      provider = new CidaasProvider({ ...this.cidaasParam, ...this.cidaasLoginProvider });\n    }\n    const pkceBody: ITokenEndpointBody = {\n      grant_type: bodyParam.grant_type,\n      client_id: provider.options.clientId,\n      redirect_uri: provider.options.redirectUri,\n      code_verifier: CidaasProvider.base64URLEncode(\n        provider.options.code_challenge\n      )\n    };\n    this.logService.log('TEST CONFI SERVICE = ', + this.configService.configuration);\n    this.logService.log('pkceBody required for login = ' + pkceBody);\n    this.logService.log('provider body required for login =' + provider);\n    let result;\n    const res = userObject;\n    try {\n      result = await this.login(provider, pkceBody, actionType, platform);\n      if (result.access_token === '' || result.access_token === undefined) {\n        this.logService.log_e('login failed == ');\n        this.logService.log_e(result);\n        res.message = 'login Failed';\n        res.status = '1';\n        return res;\n      } else {\n        this.logService.log('login successFull == ');\n        this.logService.log(result);\n        res.message = 'login success';\n        res.status = '0';\n        res.accessToken = result.access_token;\n        res.refreshToken = result.refresh_token;\n        return res;\n      }\n    } catch (err) {\n      throwError(err);\n    }\n  }\n\n  /**\n   * @description This is logout function\n   * @description it will remove userData from local storage and store\n   */\n  async cidaasLogout() {\n    try {\n      this.storeService.dispatchUserData({});\n      this.cacheService.removeLocalData(userData);\n      return true;\n    } catch (err) {\n      throwError(err);\n    }\n  }\n\n  /**\n   * @description This is Login function to call oauth loginVia API\n   * @param provider is the CIDAAS provider object\n   * @param pkceBody is the ITokenEndpointBody object\n   * @param actionType it is identifier for the API action whether it is for login/register\n   */\n  async login(provider, pkceBody, actionType, platform) {\n    let res: any;\n    if (platform === 'browser') {\n      this.oauth = new OauthBrowser();\n    } else {\n      this.oauth = new OauthCordova();\n    }\n    if (this.cidaasLoginDesign === undefined || Object.keys(this.cidaasLoginDesign).length === 0) {\n      this.cidaasLoginDesign = loginDesign;\n    }\n    if (this.cidaasRegisterDesign === undefined || Object.keys(this.cidaasRegisterDesign).length === 0) {\n      this.cidaasRegisterDesign = registerDesign;\n    }\n    if (actionType === 'register token') {\n      res = await this.oauth.logInVia(provider, this.cidaasLoginDesign);\n    } else if (actionType === 'login token') {\n      res = await this.oauth.logInVia(provider, this.cidaasRegisterDesign);\n    }\n\n    if (!!res) {\n      pkceBody.code = res.code;\n      const data = await this.authService.oAuthCallback(pkceBody, actionType);\n      return data;\n    }\n\n  }\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { LogService } from '../logger-service/logger.service';\nimport { AuthService } from '../auth-service/auth.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n\n  constructor(\n        private logService: LogService,\n        private authService: AuthService,\n        private router: Router,\n        @Inject('SERVICE_CONFIG') public configuration: any\n    ) {\n    }\n\n  /**\n   * @description This method will check user already login or not\n   * @returns Return the true if user already logged in or else false\n   */\n  canActivate(): Observable<boolean> | Promise<boolean> | boolean {\n    this.logService.log('can Activate method is called!!!');\n    const loginScreenUrl = this.configuration.globalConfig.loginScreenUrl;\n    try {\n        return this.authService.isLoggedIn().then(isLoggedIn => {\n          this.logService.log('User exist or not', isLoggedIn);\n          if (isLoggedIn) {\n            this.logService.log('Already logged in user!!!');\n            return true;\n          } else {\n            this.logService.log_w('Please do login to continue......');\n            this.router.navigate(['/' + loginScreenUrl]); // this route will be based on parameter passed in global config\n            return false;\n          }\n        });\n      } catch (err) {\n        this.logService.log_e('Error occured in isLoggedIn method');\n        return false;\n      }\n  }\n}\n","/**\n * This is the animation file used for creating animations in the application.\n * For Tab we have to give \"data: { routeIdx: 0 }\" in the routing params. Each component should be given a routeIdx.\n * Then within the tab component (the component which has the tabs) need have the below function.\n * onActivate($event) { this.animationState = this.route.firstChild.snapshot.data['routeIdx'];}\n * And the param to be added is animationState. In the html file for the tab component add the tag\n * <div [@routeAnimations]=\"animationState\"><router-outlet (activate)=\"onActivate($event)\"></router-outlet></div>\n * This way the tab animation would work fine.\n *\n * For other navigations we have animation values as \"TabLevel\", \"SecondLevel\", \"ThirdLevel\", \"Forthlevel\"\n * Add the value properly in your routes for animations and import the slideInAnimation as a param in the Component decorator\n */\n\nimport {\n  transition,\n  trigger,\n  query,\n  style,\n  animate,\n  group,\n  animateChild\n} from '@angular/animations';\n\nexport const slideInAnimation = trigger('routeAnimations', [\n  transition('TabLevel => SecondLevel', [\n    query(\n      ':enter, :leave',\n      style({ position: 'fixed', width: '100%', height: '100%' }),\n      { optional: true }\n    ),\n    group([\n      query(\n        ':enter',\n        [\n          style({ transform: 'translateX(100%)' }),\n          animate('0.15s linear', style({ transform: 'translateX(0%)' }))\n        ],\n        { optional: true }\n      ),\n      query(\n        ':leave',\n        [\n          style({ transform: 'translateX(0%)' }),\n          animate('0.15s linear', style({ transform: 'translateX(-100%)' }))\n        ],\n        { optional: true }\n      )\n    ])\n  ]),\n  transition('ThirdLevel => ForthLevel', [\n    query(\n      ':enter, :leave',\n      style({ position: 'fixed', width: '100%', height: '100%' }),\n      { optional: true }\n    ),\n    group([\n      query(\n        ':enter',\n        [\n          style({ transform: 'translateX(100%)' }),\n          animate('0.15s linear', style({ transform: 'translateX(0%)' }))\n        ],\n        { optional: true }\n      ),\n      query(\n        ':leave',\n        [\n          style({ transform: 'translateX(0%)' }),\n          animate('0.15s linear', style({ transform: 'translateX(-100%)' }))\n        ],\n        { optional: true }\n      )\n    ])\n  ]),\n  transition('SecondLevel => ThirdLevel', [\n    query(\n      ':enter, :leave',\n      style({ position: 'fixed', width: '100%', height: '100%' }),\n      { optional: true }\n    ),\n    group([\n      query(\n        ':enter',\n        [\n          style({ transform: 'translateX(100%)' }),\n          animate('0.15s linear', style({ transform: 'translateX(0%)' }))\n        ],\n        { optional: true }\n      ),\n      query(\n        ':leave',\n        [\n          style({ transform: 'translateX(0%)' }),\n          animate('0.15s linear', style({ transform: 'translateX(-100%)' }))\n        ],\n        { optional: true }\n      )\n    ])\n  ]),\n  transition('SecondLevel => TabLevel', [\n    query(\n      ':enter, :leave',\n      style({ position: 'fixed', width: '100%', height: '100%' }),\n      { optional: true }\n    ),\n    group([\n      query(\n        ':enter',\n        [\n          style({ transform: 'translateX(-100%)' }),\n          animate('0.15s linear', style({ transform: 'translateX(0%)' }))\n        ],\n        { optional: true }\n      ),\n      query(\n        ':leave',\n        [\n          style({ transform: 'translateX(0%)' }),\n          animate('0.15s linear', style({ transform: 'translateX(100%)' }))\n        ],\n        { optional: true }\n      )\n    ])\n  ]),\n  transition('ForthLevel => ThirdLevel', [\n    query(\n      ':enter, :leave',\n      style({ position: 'fixed', width: '100%', height: '100%' }),\n      { optional: true }\n    ),\n    group([\n      query(\n        ':enter',\n        [\n          style({ transform: 'translateX(-100%)' }),\n          animate('0.15s linear', style({ transform: 'translateX(0%)' }))\n        ],\n        { optional: true }\n      ),\n      query(\n        ':leave',\n        [\n          style({ transform: 'translateX(0%)' }),\n          animate('0.15s linear', style({ transform: 'translateX(100%)' }))\n        ],\n        { optional: true }\n      )\n    ])\n  ]),\n  transition('ThirdLevel => SecondLevel', [\n    query(\n      ':enter, :leave',\n      style({ position: 'fixed', width: '100%', height: '100%' }),\n      { optional: true }\n    ),\n    group([\n      query(\n        ':enter',\n        [\n          style({ transform: 'translateX(-100%)' }),\n          animate('0.15s linear', style({ transform: 'translateX(0%)' }))\n        ],\n        { optional: true }\n      ),\n      query(\n        ':leave',\n        [\n          style({ transform: 'translateX(0%)' }),\n          animate('0.15s linear', style({ transform: 'translateX(100%)' }))\n        ],\n        { optional: true }\n      )\n    ])\n  ]),\n    transition(':decrement', [\n      query(':enter, :leave', style({ position: 'fixed', width: '100%' }), { optional: true }),\n      group([\n          query(':enter', [style({ transform: 'translateX(-100%)' }), animate('.3s ease-out', style({ transform: 'translateX(0%)' }))], {\n              optional: true,\n          }),\n          query(':leave', [style({ transform: 'translateX(0%)' }), animate('.3s ease-out', style({ transform: 'translateX(100%)' }))], {\n              optional: true,\n          }),\n      ]),\n    ]),\n    transition(':increment', [\n      query(':enter, :leave', style({ position: 'fixed', width: '100%' }), { optional: true }),\n      group([\n          query(':enter', [style({ transform: 'translateX(100%)' }), animate('.3s ease-out', style({ transform: 'translateX(0%)' }))], {\n              optional: true,\n          }),\n          query(':leave', [style({ transform: 'translateX(0%)' }), animate('.3s ease-out', style({ transform: 'translateX(-100%)' }))], {\n              optional: true,\n          }),\n      ]),\n    ]),\n]);\n","// IONIC - ANGULAR\nimport { Inject, Injectable } from '@angular/core';\nimport { LogService } from '../logger-service/logger.service';\nimport { delay } from 'q';\n\n\n@Injectable()\nexport class OnBoardingService {\n  constructor(\n    private logService: LogService,\n  ) {\n  }\n\n  /**\n   * @description This Method is responsible to handle any action to process in betwwen on boarding screens\n   * @param currentPageTitle title for current active page\n   * @param nextPageTitle title for next page\n   * @param prevPageTitle title for prev page\n   */\n  async nextClickActionHandler(currentPageTitle, nextPageTitle, prevPageTitle) {\n    this.logService.log('currentPageTitile -->', currentPageTitle);\n    this.logService.log('nextPageTitle -->', nextPageTitle);\n    this.logService.log('prevPageTitle -->', prevPageTitle);\n\n    await delay(5000);\n\n    return 'success';\n  }\n\n  /**\n   * @description This Method is responsible to handle any action to process in betwwen on boarding screens\n   * @param currentPageTitle title for current active page\n   * @param nextPageTitle title for next page\n   * @param prevPageTitle title for prev page\n   */\n  async prevClickActionHandler(currentPageTitle, nextPageTitle, prevPageTitle) {\n    this.logService.log('currentPageTitile -->', currentPageTitle);\n    this.logService.log('nextPageTitle -->', nextPageTitle);\n    this.logService.log('prevPageTitle -->', prevPageTitle);\n\n    await delay(5000);\n\n    return 'success';\n  }\n\n}\n","export const CommonConstants = {\n  SRV: 'https://private-eb271b-zwaytest.apiary-mock.com/v1/',\n  AUTHENTICATION_URL: 'https://find.z-wave.me/zboxweb',\n  PROXY_CONTROL_URL: 'https://find.z-wave.me/ZAutomation/api/v1/',\n  // GATEWAY_CONTROL_ENDPOINT: 'https://fd2xt8lnsa.execute-api.eu-west-1.amazonaws.com/dev/api/v1/gateways/control',\n  //    GATEWAY_CONTROL_ENDPOINT: 'https://postb.in/uPTXSyId/',\n  LECKAGE_PROTECTION_ID: 123,\n  WATER_SENSOR_ID: 456,\n  LECKAGE_MANUFACTURER_ID: 1043,\n  LECKAGE_MANUFACTURER_PRODUCT_ID: 1,\n  LECKAGE_MANUFACTURER_TYPE: 1\n};\n\nexport enum GatewayCredentialsTypes {\n  ADMIN = 'admin',\n  LOCAL = 'local',\n  REMOTE = 'remote'\n}\n\nexport interface GatewayCredentials {\n  user: string;\n  password: string;\n  type: GatewayCredentialsTypes;\n}\n\nexport enum SupportedDeviceTypes {\n  leckageDetector = 'LeckageDetector',\n  floodSensorRehau = 'FloodSensorRehau',\n  floodSensorOther = 'FloodSensorOther'\n}\n\nexport interface PairedDevicesData {\n  vendorId: string;\n  productId: string;\n  productType: string;\n  serialnumber: string;\n  nodeId: string;\n  deviceName: string;\n  type: SupportedDeviceTypes;\n  creationTime: Date;\n  virtualDevices: IVirtualDevice[];\n}\n\nexport interface Gateway {\n  id?: string;\n  boxId?: string;\n  localIp?: string;\n  credentials?: GatewayCredentials[];\n  password?: string;\n  homeId?: string;\n  homeGwId?: string;\n  pairedDevices?: PairedDevicesData[];\n  leckageDeviceId?: number;\n  waterSensorDeviceId?: number;\n  claimed?: boolean;\n  remoteAccessActivated?: boolean;\n}\n\nexport interface ILogoutInterface {\n  observerId: number;\n  onLogout(): Promise<any>;\n}\n\nexport const gatewayDeviceControlEndpoint = 'https://fieldtest.smarthome-dev.aws.rehau.com' + '/deviceControl/api/v1';\n\n\n// gatewayAclService interafece\n\nexport const gatewayAclEndpoint = 'https://fieldtest.smarthome-dev.aws.rehau.com' + '/acl/api/v1';\n\nexport enum GatewayAclServiceUserGatewayCredsType {\n  ADMIN = 'admin',\n  LOCAL = 'local',\n  REMOTE = 'remote'\n}\n\n\nexport interface GatewayAclServiceUserHomeGatewaysCredentials {\n  user: string;\n  password: string;\n  type: GatewayAclServiceUserGatewayCredsType;\n  boxId?: string;\n}\n\nexport interface GatewayAclServiceUserHomeGatewaysCredentialsDictionary {\n  [username: string]: GatewayAclServiceUserHomeGatewaysCredentials;\n}\n\nexport interface GatewayAclServiceUserHomeGateway {\n  homeGwId: string;\n  gwMac?: string;\n  userCredentials?: GatewayAclServiceUserHomeGatewaysCredentialsDictionary;\n}\n\nexport interface GatewayAclServiceUserHomeGatewaysDictionary {\n  [homeGwId: string]: GatewayAclServiceUserHomeGateway;\n}\n\nexport interface GatewayAclServiceUserHome {\n  homeId: string;\n  id?: string;\n  masterUser?: string;\n  gateways: GatewayAclServiceUserHomeGatewaysDictionary;\n}\n\nexport interface GatewayAclServiceHomeDictionary {\n  [homeId: string]: GatewayAclServiceUserHome;\n}\n\nexport interface GatewayAclServiceUser {\n  id: string;\n  ssoId: string;\n  homes: GatewayAclServiceHomeDictionary;\n  type: string;\n}\n\n// gatewayDeviceControlService interface\n\n\nexport interface IGatewayReducedReturn {\n  id: string;\n  boxId: string;\n  localIp: string;\n  pairedDevices: IPairedDevicesData[];\n  remoteAccessActivated: boolean;\n  homeGwId: string;\n  homeId: string;\n  type: string;\n}\n\nexport enum ISupportedDeviceTypes {\n  leckageDetector = 'LeckageDetector',\n  floodSensorRehau = 'FloodSensorRehau',\n  floodSensorOther = 'FloodSensorOther',\n  otherDevice = 'otherDevice'\n}\n\nexport interface IVirtualDevice {\n  vDevId: string;\n  deviceType: string;\n}\n\nexport interface IPairedDevicesData {\n  vendorId: string;\n  productId: string;\n  productType: string;\n  serialnumber: string;\n  nodeId: string;\n  deviceName: string;\n  type: ISupportedDeviceTypes;\n  creationTime: Date;\n  virtualDevices: IVirtualDevice[];\n}\n\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { catchError, flatMap, retryWhen, timeout } from 'rxjs/operators';\nimport { retryBackoff } from 'backoff-rxjs';\nimport { AuthService } from '../auth-service/auth.service';\nimport { WebService } from '../web-service/web.service';\nimport { LogService } from '../logger-service/logger.service';\nimport {\n  gatewayAclEndpoint,\n  GatewayAclServiceUserGatewayCredsType,\n  GatewayCredentialsTypes,\n  GatewayCredentials,\n  Gateway,\n  GatewayAclServiceUserHome,\n  GatewayAclServiceUser\n} from '../../models/getway.model';\n\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GatewayAclService {\n  private static INIT_INTERVAL = 2000;\n  private static MAX_INTERVAL = 6000;\n  private static MAX_RETRIES = 3;\n  private static REQ_TIMEOUT = 8000;\n\n\n\n  private storageName = 'gateway_device';\n\n  constructor(\n    private httpClient: HttpClient,\n    private authService: AuthService,\n    private webService: WebService,\n    private logService: LogService\n  ) {\n  }\n\n  async cloudGetHomes(accessToken: string): Promise<{ homes: GatewayAclServiceUserHome[], response: GatewayAclServiceUser }> {\n    try {\n      const gatewayAclUser = await this.userControllerGET(accessToken);\n      const result: GatewayAclServiceUserHome[] = [];\n      for (const homeId of Object.keys(gatewayAclUser.homes)) {\n        result.push(gatewayAclUser.homes[homeId]);\n      }\n      return { homes: result, response: gatewayAclUser };\n    } catch (e) {\n      console.error('gatewayAclServer::cloudGetHomes: Could not fetch Homes ' + JSON.stringify(e));\n      return { homes: [], response: null };\n    }\n  }\n\n  async userControllerGET(accessToken: string): Promise<GatewayAclServiceUser> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        // tslint:disable-next-line:object-literal-key-quotes\n        'access_token': accessToken,\n        'x-correlation-id': await this.authService.getCorrelationId()\n      })\n    };\n\n    const url = gatewayAclEndpoint + '/users/';\n    const retryConfig = {\n      REQ_TIMEOUT: GatewayAclService.REQ_TIMEOUT,\n      INIT_INTERVAL: GatewayAclService.INIT_INTERVAL,\n      MAX_INTERVAL: GatewayAclService.MAX_INTERVAL,\n      MAX_RETRIES: GatewayAclService.MAX_RETRIES,\n    };\n    const gwUser: GatewayAclServiceUser = await this.webService.getApi(url, httpOptions, retryConfig).toPromise();\n\n    this.logService.log(gwUser);\n    return gwUser;\n  }\n\n  async getGatewaysToHome(accessToken: string, homeId: string, aclUser: GatewayAclServiceUser): Promise<Gateway[]> {\n    const result: Gateway[] = [];\n    for (const gatewayId of Object.keys(aclUser.homes[homeId].gateways)) {\n      const gwResult: Gateway = {\n        credentials: []\n      };\n      for (const credId of Object.keys(aclUser.homes[homeId].gateways[gatewayId].userCredentials)) {\n        gwResult.homeGwId = gatewayId;\n        console.log('Getting credId: ' + credId);\n        const credentials = aclUser.homes[homeId].gateways[gatewayId].userCredentials[credId];\n        console.log('Getting homeId: ' + homeId);\n        console.log(credentials);\n        if (credentials.type === GatewayAclServiceUserGatewayCredsType.ADMIN ||\n          credentials.type === GatewayAclServiceUserGatewayCredsType.LOCAL ||\n          credentials.type === GatewayAclServiceUserGatewayCredsType.REMOTE) {\n          const newCreds: GatewayCredentials = {\n            user: credentials.user,\n            password: credentials.password,\n            type: credentials.type === 'admin' ? GatewayCredentialsTypes.ADMIN :\n              credentials.type === 'local' ? GatewayCredentialsTypes.LOCAL :\n                credentials.type === 'remote' ? GatewayCredentialsTypes.REMOTE :\n                  null\n          };\n          console.log('Got correct type! ' + JSON.stringify(newCreds));\n          gwResult.credentials.push(newCreds);\n        }\n      }\n      result.push(gwResult);\n    }\n    return result;\n  }\n\n  async getHomeOfUser(accessToken: string, homeID: string) {\n    console.log('GatewayACLService::getHomeOfUser: ' + accessToken + ' for HomeID ' + homeID);\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        access_token: accessToken,\n        'x-correlation-id': await this.authService.getCorrelationId()\n      })\n    };\n\n    const url = gatewayAclEndpoint + '/users/homes/' + homeID;\n    const retryConfig = {\n      REQ_TIMEOUT: GatewayAclService.REQ_TIMEOUT,\n      INIT_INTERVAL: GatewayAclService.INIT_INTERVAL,\n      MAX_INTERVAL: GatewayAclService.MAX_INTERVAL,\n      MAX_RETRIES: GatewayAclService.MAX_RETRIES,\n    };\n    const home: GatewayAclServiceUserHome = await this.webService.getApi(url, httpOptions, retryConfig).toPromise();\n\n    this.logService.log(home);\n    return home;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { GatewayAclService } from './gatewayAcl.service';\nimport { AuthService } from '../auth-service/auth.service';\nimport { CacheService } from '../cache-service/cache.service';\nimport { WebService } from '../web-service/web.service';\nimport { LogService } from '../logger-service/logger.service';\nimport {\n  CommonConstants,\n  GatewayCredentialsTypes,\n  Gateway,\n  ILogoutInterface,\n  gatewayDeviceControlEndpoint\n} from '../../models/getway.model';\n\nexport class GatewayAlreadyConfiguredError extends Error {\n  constructor(m: string) {\n    super(m);\n\n    // Set the prototype explicitly.\n    Object.setPrototypeOf(this, GatewayAlreadyConfiguredError.prototype);\n  }\n}\n\nexport class GatewaySerialNotFoundError extends Error {\n  constructor(m: string) {\n    super(m);\n    this.name = 'GatewaySerialNotFoundError';\n    // Set the prototype explicitly.\n    Object.setPrototypeOf(this, GatewayAlreadyConfiguredError.prototype);\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GatewayService implements ILogoutInterface {\n  private static INIT_INTERVAL_REMOTE = 2000;\n  private static MAX_INTERVAL_REMOTE = 6000;\n  private static REQ_TIMEOUT_REMOTE = 20000;\n\n  private static INIT_INTERVAL_LOCAL = 2000;\n  private static MAX_INTERVAL_LOCAL = 6000;\n  private static REQ_TIMEOUT_LOCAL = 6000;\n\n  observerId = 48976446132111;\n\n  private localOnline;\n  private remoteOnline;\n  private completedFirstRun = false;\n  private storageName = 'gateway_device';\n\n  constructor(\n    private http: HttpClient,\n    private gatewayAclService: GatewayAclService,\n    private authService: AuthService,\n    private cacheService: CacheService,\n    private webService: WebService,\n    private logService: LogService,\n  ) {\n  }\n\n\n  /**\n   * @description Calls the Gateway API\n   * @param gateway gateWay Information\n   * @param apiEndpoint This is Api End P{oints}\n   * @param method Specific Method To Follow\n   * @param body Body If It is a POST Api Call\n   * @param headers not used right now\n   * @param connectionType explicitly decide, if it should be called locally, or remotely. Default: remote\n   */\n  async callApi(\n    gateway: Gateway,\n    apiEndpoint: string,\n    method: string = 'get',\n    body: any | null = null,\n    headers?: {},\n    connectionType?: 'remote' | 'local' | 'admin',\n    retryLocal: number = 2,\n    retryRemote: number = 3,\n    killRequestObject: { continue: boolean } = { continue: true },\n    localResponseType: string = 'json'\n  ) {\n    const retryConfig = {\n      REQ_TIMEOUT: GatewayService.REQ_TIMEOUT_LOCAL,\n      INIT_INTERVAL: GatewayService.INIT_INTERVAL_LOCAL,\n      MAX_INTERVAL: GatewayService.MAX_INTERVAL_LOCAL,\n      MAX_RETRIES: retryLocal,\n    };\n\n    // If no connection Type is given and the Method is run for the first Time\n    if (!connectionType && this.completedFirstRun) {\n      if (this.localOnline) {\n        connectionType = 'local';\n      } else if (this.remoteOnline) {\n        connectionType = 'remote';\n      } else {\n        // go to race between remote and local\n        connectionType = undefined;\n      }\n    }\n\n    // try remote call first, else try local\n    let username: string;\n    let password: string;\n    const useCredentials =\n      connectionType === 'local'\n        ? GatewayCredentialsTypes.LOCAL\n        : GatewayCredentialsTypes.REMOTE;\n\n    // this.logService.log('cred type: ' + useCredentials);\n    for (const creds of gateway.credentials) {\n      // this.logService.log('iterate creds' + JSON.stringify(creds));\n      if (creds.type === useCredentials) {\n        username = creds.user;\n        password = creds.password;\n      }\n    }\n\n    if (username === undefined || password === undefined) {\n      throw new Error('Username or Password undefined');\n    }\n\n    if (connectionType === 'remote') {\n      this.logService.log('Connection is remote');\n      const requestBody = {\n        boxId: gateway.boxId,\n        username,\n        password,\n        urlEndpoint: apiEndpoint,\n        method,\n        body: undefined\n      };\n      if (\n        method.toUpperCase() === 'POST' ||\n        method.toUpperCase() === 'PUT' ||\n        method.toUpperCase() === 'PATCH'\n      ) {\n        requestBody.body = JSON.stringify(body);\n      }\n      const user: any = await this.authService.getUser();\n\n      const requestHeader = {\n        access_token: user.access_token\n      };\n\n      try {\n        requestHeader[\n          'x-correlation-id'\n        ] = await this.authService.getCorrelationId();\n      } catch (e) {\n        this.logService.log_e(e);\n      }\n      const url = gatewayDeviceControlEndpoint + '/gateways/control';\n      const httpOption = {\n        headers: requestHeader\n      };\n      try {\n        const apiResponse = await this.webService.postApi(url, requestBody, httpOption, retryConfig).toPromise();\n        this.remoteOnline = true;\n        this.completedFirstRun = true;\n        return apiResponse;\n      } catch (e) {\n        this.logService.log_e(\n          'gatewayservice::callApi: Network error remote request' +\n          JSON.stringify(e)\n        );\n        this.remoteOnline = false;\n      }\n    } else if (connectionType === 'local' || connectionType === 'admin') {\n      this.logService.log('Connection is local');\n      const basicAuthString = 'Basic ' + btoa(username + ':' + password);\n      // const user = await this.userService.getUser();\n      try {\n        const httpOptions = {\n          headers: { Authorization: basicAuthString }\n        };\n        if (\n          method.toUpperCase() !== 'GET' &&\n          method.toUpperCase() !== 'OPTIONS'\n        ) {\n          // tslint:disable-next-line:no-string-literal\n          httpOptions['body'] = body;\n        }\n        // tslint:disable-next-line:no-string-literal\n        httpOptions['responseType'] = localResponseType;\n        const url = 'http://' + gateway.localIp + ':8083/' + apiEndpoint;\n\n        // Create separate method for request API\n        const apiResponse = await this.webService.requestApi(method, url, httpOptions, retryConfig).toPromise();\n        this.localOnline = true;\n        this.completedFirstRun = true;\n        return apiResponse;\n      } catch (e) {\n        this.logService.log_e(\n          'gatewayservice::callApi: Network error local request' +\n          JSON.stringify(e)\n        );\n        this.localOnline = false;\n        if (!connectionType) {\n          return await this.callApi(\n            gateway,\n            apiEndpoint,\n            method,\n            body,\n            headers,\n            'remote'\n          );\n        } else {\n          throw e;\n        }\n      }\n    } else if (!connectionType) {\n      // Do requests in parallel, if no connectionType is specified\n      const curtime = new Date().getTime();\n      const cancelRequestLocal = { continue: true };\n      const cancelRequestRemote = { continue: true };\n      const remotePromise = this.callApi(\n        gateway,\n        apiEndpoint,\n        method,\n        body,\n        headers,\n        'remote',\n        undefined,\n        undefined,\n        cancelRequestRemote\n      );\n      const localPromise = this.callApi(\n        gateway,\n        apiEndpoint,\n        method,\n        body,\n        headers,\n        'local',\n        undefined,\n        undefined,\n        cancelRequestLocal\n      );\n      try {\n        // wait for first to finish\n        const response = await Promise.race([remotePromise, localPromise]);\n        cancelRequestLocal.continue = false;\n        cancelRequestRemote.continue = false;\n        return response;\n      } catch (e) {\n        // jumps in this catch, if one of the request fails\n        this.logService.log_e('gatewayservice::callApi: parallel promise failed ' + e);\n        // wait for both to finish\n        // the promise that failed before will fail again here and throw an exception\n        // the other one is still open and could resolve or reject\n        let result;\n        try {\n          result = await remotePromise;\n          this.remoteOnline = true;\n        } catch (e) {\n          this.remoteOnline = false;\n          this.logService.log_e(\n            'gatewayservice::callApi: remote request failed with error ' +\n            JSON.stringify(e)\n          );\n        }\n        try {\n          result = await localPromise;\n          this.localOnline = true;\n        } catch (e) {\n          this.localOnline = false;\n          this.logService.log_e(\n            'gatewayservice::callApi: Local request failed with error ' +\n            JSON.stringify(e)\n          );\n        }\n        if (result === undefined) {\n          throw new Error('gatewayservice::callApi: Both requests failed');\n        }\n        return result;\n      }\n    }\n  }\n\n  /**\n   * @description Calls the ZWaveAPI and get data for all the conected devices\n   * @param gateway gateWay Information\n   * @param getMock bollean type\n   * @param doDefaultRetrys retry parameter type boolean\n   */\n  async getLeckageDeviceConnectedToGateway(\n    gateway: Gateway,\n    getMock: boolean = false,\n    doDefaultRetrys = false\n  ) {\n    // if (getMock) {\n    //   return [\n    //     {\n    //       nodeId: 3,\n    //       givenName: 'MockDevice'\n    //     }\n    //   ];\n    // }\n    let allDevices;\n    if (doDefaultRetrys) {\n      allDevices = await this.callApi(\n        gateway,\n        'ZWaveAPI/Data',\n        'get',\n        null,\n        null,\n        null\n      );\n    } else {\n      allDevices = await this.callApi(\n        gateway,\n        'ZWaveAPI/Data',\n        'get',\n        null,\n        null,\n        null,\n        1,\n        1\n      );\n    }\n\n    const foundDevices = [];\n    this.logService.log('gatewayService::got devices: ' + JSON.stringify(allDevices));\n    // tslint:disable-next-line:forin\n    for (const nodeId in allDevices.devices) {\n      const device = allDevices.devices[nodeId];\n      if (\n        device.data.manufacturerId.value ===\n        CommonConstants.LECKAGE_MANUFACTURER_ID &&\n        device.data.manufacturerProductId.value ===\n        CommonConstants.LECKAGE_MANUFACTURER_PRODUCT_ID &&\n        device.data.manufacturerProductType.value ===\n        CommonConstants.LECKAGE_MANUFACTURER_TYPE\n      ) {\n        foundDevices.push({\n          nodeId,\n          givenName: device.data.givenName.value\n        });\n      }\n\n    }\n    return foundDevices;\n  }\n\n  /**\n   * @description not in use\n   */\n  async onLogout() {\n    // await this.localStorageService.removePersistentItem(this.storageName);\n  }\n\n  /**\n   * @description method to save the gateway object in local storage for persistence use\n   * @param accessToken accesstoken\n   * @param gateway object to save\n   */\n  async saveGateway(accessToken: string, gateway: Gateway) {\n    this.logService.log(accessToken);\n    this.cacheService.setLocalData(this.storageName, JSON.stringify(gateway));\n  }\n\n  /**\n   * @description method to fetch gateway object from local storage and return parse gateway object\n   * @param accessToken access token\n   */\n  async getPairedGateway(accessToken: string): Promise<Gateway> {\n    this.logService.log('in get pair getway service', accessToken);\n    const rawGatewayObject = JSON.stringify(this.cacheService.getLocalData(\n      this.storageName\n    ));\n    this.logService.log(rawGatewayObject);\n    const gw: Gateway = JSON.parse(rawGatewayObject);\n    return gw;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpHeaders } from '@angular/common/http';\nimport { AuthService } from '../auth-service/auth.service';\nimport { WebService } from '../web-service/web.service';\nimport {\n  Gateway,\n  gatewayDeviceControlEndpoint\n} from '../../models/getway.model';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GatewayDeviceControlService {\n  private static INIT_INTERVAL = 2000;\n  private static MAX_INTERVAL = 6000;\n  private static MAX_RETRIES = 3;\n  private static REQ_TIMEOUT = 6000;\n\n  constructor(\n    private authService: AuthService,\n    private webService: WebService\n  ) { }\n\n  async updateGatewayData(gateway: Gateway, mac: string, accessToken: string) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        // tslint:disable-next-line:object-literal-key-quotes\n        'access_token': accessToken,\n        'x-correlation-id': await this.authService.getCorrelationId()\n      })\n    };\n\n    const url = gatewayDeviceControlEndpoint + '/gateways/' + mac;\n    const retryConfig = {\n      REQ_TIMEOUT: GatewayDeviceControlService.REQ_TIMEOUT,\n      INIT_INTERVAL: GatewayDeviceControlService.INIT_INTERVAL,\n      MAX_INTERVAL: GatewayDeviceControlService.MAX_INTERVAL,\n      MAX_RETRIES: GatewayDeviceControlService.MAX_RETRIES,\n    };\n    const apiResponse: Gateway = await this.webService.getApi(url, httpOptions, retryConfig).toPromise();\n\n    if (\n      apiResponse.boxId &&\n      apiResponse.homeGwId &&\n      apiResponse.homeId &&\n      apiResponse.id &&\n      apiResponse.localIp\n    ) {\n      gateway.boxId = apiResponse.boxId;\n      gateway.homeGwId = apiResponse.homeGwId;\n      gateway.homeId = apiResponse.homeId;\n      gateway.id = apiResponse.id;\n      gateway.localIp = apiResponse.localIp;\n    } else {\n      throw new Error('Could not fetch Gateway, empty response!');\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { AuthService } from '../auth-service/auth.service';\nimport { GatewayService } from '../gateway-service/gateway.service';\nimport { LogService } from '../logger-service/logger.service';\n\nexport const onlineOfflineData = new Subject();\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OnlineOfflineService {\n  // observerId = 5689564564;\n\n  // private observer: IOnlineOfflineObserver[] = [];\n  private refreshTime = 5000;\n  failureRate = new BehaviorSubject<number>(0);\n\n  REGUARD_OFFLINE = false;\n\n  private tickInterval;\n  private remoteOnline = true;\n  private localOnline = true;\n\n  constructor(\n    private authService: AuthService,\n    private gatewayService: GatewayService,\n    private logService: LogService,\n  ) {\n    // ngOnInit not supported for services so logic has to be in constructor\n    this.logService.log('onlineOffline::onInit');\n    // this.initialize();\n  }\n\n  async initialize() {\n    this.logService.log('onlineOffline::initialize');\n    clearInterval(this.tickInterval);\n    this.tickInterval = setInterval(() => {\n      this.tick();\n    }, this.refreshTime);\n  }\n\n  private async tick() {\n    this.logService.log('onlineOffline::tick');\n    const localBefore = this.localOnline;\n    const remoteBefore = this.remoteOnline;\n    // await this.checkLocalConnection();\n    // await this.checkRemoteConnection();\n\n    await this.checkConnection('local');\n    await this.checkConnection('remote');\n\n    if (\n      localBefore !== this.localOnline ||\n      remoteBefore !== this.remoteOnline\n    ) {\n      this.notify();\n    }\n  }\n\n  private notify() {\n    this.logService.log('onlineOffline::notify');\n    onlineOfflineData.next({ localOnline: this.localOnline, remoteOnline: this.remoteOnline });\n  }\n\n  private async checkConnection(type) {\n    const user = await this.authService.getUser();\n    const gateway = await this.gatewayService.getPairedGateway(\n      user.access_token\n    );\n    try {\n      const response = await this.gatewayService.callApi(\n        gateway,\n        'ZAutomation/api/v1/status',\n        'get',\n        null,\n        null,\n        type\n      );\n      if (response !== undefined && response.code === 200) {\n        if (type === 'local') {\n          this.localOnline = true;\n        } else {\n          this.remoteOnline = true;\n        }\n      } else {\n        this.logService.log('onlineOffline::local offline-- ' + JSON.stringify(response));\n        // this.localOnline = true;\n        if (type === 'local') {\n          this.localOnline = false;\n        } else {\n          this.remoteOnline = false;\n        }\n      }\n    } catch (e) {\n      this.logService.log('onlineOffline::local offline catch');\n      if (type === 'local') {\n        this.localOnline = false;\n      } else {\n        this.remoteOnline = false;\n      }\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { CacheService } from '../cache-service/cache.service';\n\nexport enum FlowUnit {\n  FLOW_L_M = 'L/M',\n  FLOW_L_H = 'L/H',\n  FLOW_M3_H = 'm3/H'\n}\n\nexport enum AmountUnit {\n  AMOUNT_LITERS = 'l',\n  AMOUNT_CUBICMETERS = 'm3'\n}\n\nexport enum TemperatureUnit {\n  TEMPERATURE_C = 'C',\n  TEMPERATURE_F = 'F'\n}\n\nexport enum PressureUnit {\n  PRESSURE_BAR = 'Bar',\n  PRESSURE_PA = 'Pa'\n}\n\nexport class Settings {\n  amountUnit: AmountUnit = AmountUnit.AMOUNT_LITERS;\n  flowUnit: FlowUnit = FlowUnit.FLOW_L_H;\n  pressureUnit: PressureUnit = PressureUnit.PRESSURE_BAR;\n  temperatureUnit: TemperatureUnit = TemperatureUnit.TEMPERATURE_C;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SensorSettingService {\n  private storageName = 'user_settings';\n\n  constructor(private cacheService: CacheService) { }\n\n  /**\n   * @description convert the amount parameters to specific value\n   * @param unit amount parameter to change\n   * @param inValue initial value of unit\n   */\n  convertAmount(unit: AmountUnit, inValue: number): string {\n    console.log('Hy I am Unit', unit);\n    if (unit === AmountUnit.AMOUNT_LITERS) {\n      return this.roundValueToZeroDigits(inValue * 1000);\n    } else if (unit === AmountUnit.AMOUNT_CUBICMETERS) {\n      return this.roundValue(inValue);\n    } else {\n      return this.roundValueToZeroDigits(inValue * 1000);\n    }\n  }\n\n  /**\n   * @description convert the flow parameters to specific value\n   * @param unit flow parameter to change\n   * @param inValue initial value of unit\n   */\n  convertFlow(unit: FlowUnit, inValue: number): string {\n    if (unit === FlowUnit.FLOW_L_M) {\n      return this.roundValue(inValue / 60);\n    } else if (unit === FlowUnit.FLOW_L_H) {\n      return this.roundValueToZeroDigits(inValue);\n    } else if (unit === FlowUnit.FLOW_M3_H) {\n      return this.roundValue(inValue / 1000);\n    } else {\n      return this.roundValue(inValue / 60);\n    }\n  }\n\n  /**\n   * @description convert the temperature parameters to specific value\n   * @param unit unit of parameter to change\n   * @param inValue initial value of unit\n   */\n  convertTemp(unit: TemperatureUnit, inValue: number): string {\n    if (unit === TemperatureUnit.TEMPERATURE_C) {\n      return this.roundValue(inValue);\n    } else if (unit === TemperatureUnit.TEMPERATURE_F) {\n      return this.roundValue((inValue * 9) / 5 + 32);\n    } else {\n      return this.roundValue(inValue);\n    }\n  }\n\n  /**\n   * @description convert the pressure parameters to specific value\n   * @param unit unit of parameter to change\n   * @param inValue initial value of unit\n   */\n  convertPressure(unit: PressureUnit, inValue: number): string {\n    if (unit === PressureUnit.PRESSURE_BAR) {\n      return this.roundValue(inValue / 100);\n    } else if (unit === PressureUnit.PRESSURE_PA) {\n      return this.roundValue(inValue);\n    } else {\n      return this.roundValue(inValue / 100);\n    }\n  }\n\n  /**\n   * @description get settings parameter object from local storage\n   */\n  async getSettings(): Promise<Settings> {\n    let gw: Settings = new Settings();\n    const rawGatewayObject: any = this.cacheService.getLocalData(this.storageName);\n    if (rawGatewayObject !== null) {\n      gw = (rawGatewayObject);\n    }\n    if (gw == null) {\n      console.log('GW was null, create new object');\n      gw = new Settings();\n    }\n    return gw;\n  }\n\n  /**\n   * @description set settings parameter object in local storage\n   * @param settings object to store\n   */\n  async setSettings(settings: Settings) {\n    this.cacheService.setLocalData(this.storageName, (settings));\n  }\n\n  private roundValue(value: number): string {\n    return value.toFixed(1);\n  }\n\n  private roundValueToZeroDigits(value: number): string {\n    return value.toFixed(0);\n  }\n}\n","\nexport interface Sensor {\n  title: string;\n  subTitle: string;\n  value: string;\n  timestamp?: number;\n}\n\nexport enum SupportedDeviceTypes {\n  leckageDetector = 'LeckageDetector',\n  floodSensorRehau = 'FloodSensorRehau',\n  floodSensorOther = 'FloodSensorOther'\n}\n\nexport interface VirtualDevice {\n  creationTime: number;\n  creatorId: number;\n  customIcons: any;\n  deviceType: string;\n  h: number;\n  hasHistory: boolean;\n  id: string;\n  location: number;\n  metrics: VirtualDeviceMetrics;\n  order: VirtualDeviceOrder;\n  permanently_hidden: false;\n  probeType: string;\n  tags: string[];\n  updateTime: number;\n  visibility: boolean;\n}\nexport interface VirtualDeviceOrder {\n  rooms: number;\n  elements: number;\n  ashboard: number;\n  room: number;\n}\n\nexport class DeviceMetric {\n  icon: string;\n  title: string;\n  isFailed: boolean;\n  level: any;\n  scaleTitle: any;\n}\n\nexport class DeviceOrder {\n  rooms: number;\n  elements: number;\n  ashboard: number;\n  room: number;\n}\n\nexport class DeviceData {\n  creationTime: number;\n  creatorId: number;\n  customIcons = {};\n  deviceType: string;\n  h: number;\n  hasHistory: boolean;\n  id: string;\n  location: number;\n  metrics: DeviceMetric;\n  order: DeviceOrder;\n  // tslint:disable-next-line:variable-name\n  permanently_hidden: false;\n  probeType: string;\n  tags: string[] = [];\n  updateTime: number;\n  visibility: boolean;\n}\n\nexport interface VirtualDeviceMetrics {\n  icon: string;\n  title: string;\n  level: string;\n  lastLevel: string;\n  modificationTime: string;\n  scaleTitle: any;\n  isFailed: boolean;\n}\n\nexport interface DeviceMap {\n  updateTime: string;\n  devices: { [id: string]: VirtualDevice };\n}\n\nexport class SafeGuardDevice {\n  mainDevice: DeviceData;\n  sensorDevices: DeviceData[] = [];\n  async getAllConfigParams() {\n    return 1;\n  }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport {\n  OnlineOfflineService, onlineOfflineData,\n} from '../onlineOffline-service/onlineOffline.service';\nimport { AuthService } from '../auth-service/auth.service';\nimport { GatewayService } from '../gateway-service/gateway.service';\nimport { CacheService } from '../cache-service/cache.service';\nimport { SensorSettingService } from '../leakage-helper-service/settings.service';\nimport {\n  Sensor,\n  VirtualDevice,\n  DeviceData,\n  DeviceMap,\n  SafeGuardDevice\n} from '../../models/zAutomation.model';\nimport { Gateway } from '../../models/getway.model';\nimport { LogService } from '../logger-service/logger.service';\n\nexport const sensorUpdateSub = new Subject();\nexport const sensorsDataSub = new Subject();\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ZAutomationService {\n  appStartTime = Math.floor(new Date().getTime() / 1000);\n\n\n  device: SafeGuardDevice;\n\n  tickInterval;\n  private storageName = 'zautomation_object';\n  // tslint:disable-next-line:variable-name\n  private _deviceMap: DeviceMap;\n  get deviceMap(): DeviceMap {\n    return this._deviceMap;\n  }\n  set deviceMap(value: DeviceMap) {\n    this._deviceMap = value;\n    this.setConfigWrapperToStorage(value);\n  }\n  // private observer: IzAutomationObserver[] = [];\n  private remoteOnline = true;\n  private localOnline = true;\n  private refreshTime = 2500;\n  private freezeButtonUntil = 0;\n  safeGuardChecked: any = { flag: false };\n  failureRate = new BehaviorSubject<number>(0);\n  constructor(\n    private onlineOfflineService: OnlineOfflineService,\n    private authService: AuthService,\n    private gatewayService: GatewayService,\n    private settingService: SensorSettingService,\n    private logService: LogService,\n    private cacheService: CacheService,\n  ) {\n    this.logService.log('zAutomationAPI::onInit');\n    if (this.cacheService.getLocalData('safeGuardChecked')) {\n      this.safeGuardChecked = this.cacheService.getLocalData('safeGuardChecked');\n    }\n    // this.onlineOfflineService.subscribe(this);\n    onlineOfflineData.subscribe((data: any) => {\n      this.onlineOfflineUpdate(data.localOnline, data.remoteOnline);\n    });\n  }\n\n  /**\n   * @description function to maintain the state of variables localOnline and remoteOnline\n   * @param localOnline boolean value true if device connected localy\n   * @param remoteOnline boolean value true if device connected remotely\n   */\n  onlineOfflineUpdate(localOnline: boolean, remoteOnline: boolean) {\n    this.logService.log(\n      'zAutomationAPI::onlineOfflineUpdate ' + localOnline + ' ' + remoteOnline\n    );\n    this.remoteOnline = remoteOnline;\n    this.localOnline = localOnline;\n  }\n\n  /**\n   * @description this method will initialize onlineOfflineService\n   * @description and continuosly check for device connectivity status\n   * @description it will continuosly call tick method which will fetch connected device info\n   */\n  public initialize() {\n    this.logService.log('initialize method call-- in zAutomation service');\n    clearInterval(this.tickInterval);\n    this.onlineOfflineService.initialize();\n    // this.onlineOfflineInitialize();\n    this.tick(true);\n    this.logService.log('Tick Runs 1st Time ------------------->');\n    this.tickInterval = setInterval(async () => {\n      // await this.onlineOfflineInitialize();\n      this.tick(false);\n    }, this.refreshTime);\n  }\n\n  /**\n   * @description if device is connected either localy or remotely then this function will call the polldata function\n   * @description to get the connected device info\n   * @param firstRun is to check whether function is hitted very first time as need to\n   * fetch zAutomation object from local storage in first run\n   */\n  private async tick(firstRun: boolean) {\n    this.logService.log('in tick function zAutomation service');\n    // if (this.observer.length > 0) {\n    this.logService.log('zAutomationAPI::tick');\n    try {\n      if (!this.localOnline && !this.remoteOnline) {\n        this.logService.log('zAutomationAPI::no tick, because Offline');\n        return;\n      }\n      const user = await this.authService.getUser();\n      const gw = await this.gatewayService.getPairedGateway(\n        user.access_token\n      );\n\n      if (gw.leckageDeviceId !== undefined) {\n        if (firstRun) {\n          this.logService.log('zAutomationAPI::firstRunLoad');\n          this._deviceMap = await this.getConfigWrapperFromStorage();\n          this.notify();\n        } else {\n          // if (firstRun || this.observer.length > 0) {\n          this.logService.log('zAutomationAPI::tick::polldata');\n          this.logService.log('DEBUG firstrun:' + firstRun);\n          await this.pollData();\n        }\n        // if (this.observer.length === 0) {\n        //   this.logService.log('DEBUG observer length 0');\n        //   // return;\n        // }\n        this.decFailureRate();\n      } else {\n        this.logService.log(\n          'zAutomationAPI::tick: leackage device undefined, skipping network requests'\n        );\n      }\n    } catch (e) {\n      this.logService.log(\n        'zAutomationAPI::tick:Catch: Could not get tick, error: ' +\n        e.message +\n        ';;;;;;;' +\n        e.stack\n      );\n      this.incFailureRate();\n    }\n  }\n\n  /**\n   * @description this function will call fetchpull data to either get whole data or to get data from last update time\n   */\n  private async pollData() {\n    if (\n      this.deviceMap &&\n      this.deviceMap.updateTime &&\n      Object.keys(this.deviceMap.devices).length > 0\n    ) {\n      this.logService.log('zAutomationAPI::pollData: Polling delta data');\n      await this.fetchPollData('delta'); // passing parameter delta to fetch data from last upodatetime\n    } else {\n      this.logService.log('zAutomationAPI::pollData: Polling complete data');\n      await this.fetchPollData('complete'); // passing parameter complete to get whole object\n    }\n  }\n\n  /**\n   * @description call device API and get the data either complete or from last update time based on parameter passed\n   * @param type should be delta if need to fetch data using last update time else complete\n   */\n  private async fetchPollData(type) {\n    this.logService.log('in fetchPollData method');\n    let url;\n    if (type === 'delta') {\n      url = 'ZAutomation/api/v1/devices?since=' + this.deviceMap.updateTime;\n      // url = 'ZWaveAPI/Data/' + this.deviceMap.updateTime;\n    } else {\n      url = 'ZAutomation/api/v1/devices';\n      // url = 'ZWaveAPI/Data/?call=4';\n    }\n\n    const newWrapper: DeviceMap = { updateTime: '', devices: null };\n    this.logService.log('zAutomationAPI::pollCompleteData');\n    const user = await this.authService.getUser();\n    const gateway = await this.gatewayService.getPairedGateway(\n      user.access_token\n    );\n    const pollObject = await this.gatewayService.callApi(\n      gateway,\n      url\n    );\n    this.logService.log('I am PollObject, I might have all the Device Data', pollObject);\n    if (type === 'delta') {\n      // tslint:disable-next-line:no-string-literal\n      newWrapper.updateTime = pollObject['data']['updateTime'];\n      // tslint:disable-next-line:no-string-literal\n      newWrapper.devices = await this.parseDevices(pollObject['data']['devices']);\n      if (newWrapper && newWrapper.devices) {\n        // this.logService.log('zAutomationAPI::MergeAndSave: New one');\n        let update = false;\n        // tslint:disable-next-line:forin\n        for (const deviceID in newWrapper.devices) {\n          // this.logService.log('zAutomationAPI::MergeAndSave: Updating' + JSON.stringify(newWrapper.devices[deviceID]));\n          this._deviceMap.devices[deviceID] = newWrapper.devices[deviceID];\n          update = true;\n        }\n        if (update) {\n          // this.logService.log('zAutomationAPI::MergeAndSave: Notify');\n          this.setConfigWrapperToStorage(this._deviceMap);\n          this.notify();\n        }\n      }\n    } else {\n      // tslint:disable-next-line:no-string-literal\n      newWrapper.updateTime = pollObject['data']['updateTime'];\n      // tslint:disable-next-line:no-string-literal\n      newWrapper.devices = await this.parseDevices(pollObject['data']['devices']);\n      // this.logService.log(newWrapper);\n      this.deviceMap = newWrapper;\n      this.notify();\n    }\n  }\n  /**\n   * @description Here We need to Provide the Leakage Device Id and\n   *  Its Instance.\n   */\n  private async getDeviceAndInstance(\n    gateway: Gateway\n  ): Promise<{ device: number; instance: number }> {\n    return { device: gateway.leckageDeviceId, instance: 0 };\n  }\n\n  /**\n   * @description It parse from all the Device Data and return the Array of\n   * devices whose node id is matches with gateway.leckageDeviceId.\n   */\n  private async parseDevices(\n    pollObject\n  ): Promise<{ [id: string]: VirtualDevice }> {\n    const user = await this.authService.getUser();\n    const data: any = await this.gatewayService.getPairedGateway(user.access_token);\n    const deviceIDandInstance = await this.getDeviceAndInstance(data);\n    const result: { [id: string]: VirtualDevice } = {};\n    for (const obj of pollObject) {\n      // this.logService.log('Checking if ' + deviceIDandInstance.device + ' equals ' + obj.nodeId);\n      if (\n        obj &&\n        obj.nodeId &&\n        obj.nodeId.toString() === deviceIDandInstance.device.toString()\n      ) {\n        // tslint:disable-next-line:no-string-literal\n        result[obj['id']] = obj;\n      } else if (obj.id === 'DummyDevice_18') {\n        result[obj.id] = obj;\n      }\n    }\n    return result;\n  }\n  /**\n   * @description getting zautomation_object from the Local storage\n   */\n  private async getConfigWrapperFromStorage(): Promise<DeviceMap> {\n    const result: any = (this.cacheService.getLocalData(this.storageName));\n    const object: DeviceMap = (result);\n    return object;\n  }\n  /**\n   * @description setting zautomation_object from the Local storage\n   * @param obj Object need to stored in local storage.\n   */\n  private async setConfigWrapperToStorage(obj: DeviceMap) {\n    this.cacheService.setLocalData(this.storageName, (obj));\n  }\n\n  /**\n   * @description this function notify every time when some chanegs are there in sensor values.\n   */\n  private notify() {\n    sensorUpdateSub.next({ flag: true });\n  }\n\n  /**\n   * @description this is needed for filtering a specific sensor device from the whole Array\n   * @param regex  is regular erpression need to filteraton.\n   */\n  filterDeviceMap(regex: RegExp): DeviceData {\n    for (const id in this.deviceMap.devices) {\n      if (regex.test(id)) {\n        return this.deviceMap.devices[id];\n      }\n    }\n  }\n  /**\n   * @description this just increase the Failure Counter\n   */\n  private incFailureRate() {\n    if (this.failureRate.getValue() < 3) {\n      this.failureRate.next(this.failureRate.getValue() + 1);\n    }\n  }\n\n  /**\n   * @description It Just Decrease the Failure Counter.\n   */\n\n  private decFailureRate() {\n    if (this.failureRate.getValue() > 0) {\n      this.failureRate.next(this.failureRate.getValue() - 1);\n    }\n  }\n\n  /**\n   * @description it needed for getting the updated value for a perticular Sensor.\n   * @param sensorNo using this we know which sensors updated information needed.\n   */\n  public async updateSensorValue(sensorNo: number) {\n    this.logService.log('in updateSensorValue-->', sensorNo);\n    const user = await this.authService.getUser();\n    const gateway: any = await this.gatewayService.getPairedGateway(user.access_token);\n    const deviceIDandInstance = await this.getDeviceAndInstance(gateway);\n    const deviceIDandInstanceString =\n      'ZWayVDev_zway_' +\n      deviceIDandInstance.device +\n      '-' +\n      deviceIDandInstance.instance;\n\n    let sensorPath = '';\n\n    switch (sensorNo) {\n      case 0: {\n        sensorPath = deviceIDandInstanceString + '-50-0';\n        break;\n      }\n      case 1: {\n        sensorPath = deviceIDandInstanceString + '-49-23';\n        break;\n      }\n      case 2: {\n        sensorPath = deviceIDandInstanceString + '-49-56';\n        break;\n      }\n      case 3: {\n        sensorPath = deviceIDandInstanceString + '-49-57';\n        break;\n      }\n    }\n    this.logService.log('call api --->sensorPath', sensorPath);\n    await this.gatewayService.callApi(\n      gateway,\n      'ZAutomation/api/v1/devices/' + sensorPath + '/command/update'\n    );\n  }\n\n  /**\n   * @description this function is needed for the getting the Sensor values\n   * and store it in local storage.\n   * @param sensorsValue need the initaial sensor values.\n   */\n  async getSensorValue(sensorsValue) {\n    const sensors: Sensor[] = sensorsValue;\n    this.logService.log('in update method-- device metrics');\n    const user = await this.authService.getUser();\n    const gateway = await this.gatewayService.getPairedGateway(\n      user.access_token\n    );\n    if (this.deviceMap && this.deviceMap.updateTime) {\n      // this.onlineOfflineService.REGUARD_OFFLINE = false;\n      // if (!DemoMode.IS_MOCK_DATA_MODE || !DemoMode.IS_JUST_MOCK_DATA_MODE) {\n      if (this.device) {\n        this.device.sensorDevices = [];\n      } else {\n        this.device = new SafeGuardDevice();\n      }\n      if (\n        this.filterDeviceMap(\n          new RegExp(gateway.leckageDeviceId + '-[0-9]*-37$', 'g')\n        ).metrics.isFailed\n      ) {\n        // REGUARD is offline\n        // this.onlineOfflineService.REGUARD_OFFLINE = true;\n        setTimeout(() => {\n          this.getSensorValue(sensors);\n        }, 5000);\n        return;\n      }\n      // this.onlineOfflineService.REGUARD_OFFLINE = false;\n      try {\n        const settings = await this.settingService.getSettings();\n\n        // WATERMETER\n\n        const waterMeter = this.filterDeviceMap(\n          new RegExp(gateway.leckageDeviceId + '-[0-9]*-50-0$', 'g')\n        );\n\n        this.logService.log(\n          'DeviceMetricsComponent::Update: settings meter before converting: ' +\n          JSON.stringify(waterMeter.metrics.level)\n        );\n\n        sensors[0].timestamp = waterMeter.updateTime;\n\n        sensors[0].value =\n          '' +\n          this.settingService.convertAmount(\n            settings.amountUnit,\n            waterMeter.metrics.level\n          );\n\n        // Translation service\n        // this.sensors[0].subTitle = this.translationService.instant(\n        //   settings.amountUnit\n        // );\n        // this.sensors[0].title = this.translationService.instant('Amount');\n\n        // TEMPERATURE\n\n        const waterTemperature = this.filterDeviceMap(\n          new RegExp(gateway.leckageDeviceId + '-[0-9]*-49-23$', 'g')\n        );\n\n        sensors[1].timestamp = waterTemperature.updateTime;\n\n        sensors[1].value =\n          '' +\n          this.settingService.convertTemp(\n            settings.temperatureUnit,\n            waterTemperature.metrics.level\n          );\n\n        // Translation Services\n        // this.sensors[1].subTitle = this.translationService.instant(\n        //   settings.temperatureUnit\n        // );\n        // this.sensors[1].title = this.translationService.instant(\n        //   'Temperature'\n        // );\n\n        // FLOW\n\n        const waterFlow = this.filterDeviceMap(\n          new RegExp(gateway.leckageDeviceId + '-[0-9]*-49-56$', 'g')\n        );\n\n        sensors[2].timestamp = waterFlow.updateTime;\n\n        sensors[2].value =\n          '' +\n          this.settingService.convertFlow(\n            settings.flowUnit,\n            waterFlow.metrics.level\n          );\n        // Translation Services\n        // this.sensors[2].subTitle = this.translationService.instant(\n        //   settings.flowUnit\n        // );\n        // this.sensors[2].title = this.translationService.instant('Flow');\n\n        // PRESSURE\n\n        const waterPressure = this.filterDeviceMap(\n          new RegExp(gateway.leckageDeviceId + '-[0-9]*-49-57$', 'g')\n        );\n        this.logService.log(\n          'DeviceMetricsComponent::Update: settings waterPressure: ' +\n          JSON.stringify(waterPressure)\n        );\n        this.logService.log('Water Sensor Updated Time', waterPressure.updateTime);\n\n        sensors[3].timestamp = waterPressure.updateTime;\n\n        sensors[3].value =\n          '' +\n          this.settingService.convertPressure(\n            settings.pressureUnit,\n            waterPressure.metrics.level\n          );\n\n        // Dummy Device 18\n        // PRESSURE\n        // alert('11');\n        const dummyDevice = this.filterDeviceMap(\n          new RegExp('DummyDevice_18', 'g')\n        );\n        if (dummyDevice) {\n          this.logService.log('Dummy Device Updated level', dummyDevice.metrics.level);\n          sensors[4].timestamp = dummyDevice.updateTime;\n          sensors[4].value = dummyDevice.metrics.level;\n        }\n        this.logService.log('Hey I am New Sensor Value', sensors);\n        this.cacheService.setLocalData('sensors', (sensors));\n        this.logService.log('sensors-local-storage: ' + JSON.stringify(sensors));\n\n        const now = Math.floor(new Date().getTime() / 1000) - 60 * 2;\n        const nowOneMin = Math.floor(new Date().getTime() / 1000) - 20;\n\n        this.logService.log('before loop sensor--->', sensors);\n\n        for (let i = 0; i < sensors.length; i++) {\n          this.logService.log(\n            'DeviceMetricsComponent::Update: oldstamp: ' +\n            sensors[i].timestamp +\n            'newstamp: ' +\n            now\n          );\n          if (sensors[i].timestamp) {\n            if (\n              sensors[i].timestamp < now &&\n              this.appStartTime < nowOneMin\n            ) {\n              this.updateSensorValue(i);\n              this.logService.log(\n                'DeviceMetricsComponent::Update: UpdateSensorValueCalled ' +\n                (now - sensors[i].timestamp)\n              );\n            }\n          }\n        }\n      } catch (e) {\n        this.logService.log(\n          'DeviceMetricsComponent::Update: Error fetching deviceMetrics! ' + e\n        );\n      }\n      // }\n\n      if (this.freezeButtonUntil <= new Date().getTime()) {\n        const guardChecked = this.filterDeviceMap(\n          new RegExp(gateway.leckageDeviceId + '-[0-9]*-37$', 'g')\n        );\n\n        this.safeGuardChecked.flag = guardChecked.metrics.level === 'on';\n        this.cacheService.setLocalData('safeGuardChecked', (this.safeGuardChecked));\n      }\n    }\n    sensorsDataSub.next({ data: sensors });\n  }\n\n}\n"],"names":["createAction","props","select","Injectable","Store","Inject","TranslateHttpLoader","NgModule","HttpClientModule","TranslateModule","TranslateLoader","HttpClient","Observable","tslib_1.__values","TranslateService","APP_INITIALIZER","forwardRef","createReducer","on","initialState","Reducer","tslib_1.__extends","OAuthProvider","timeout","retryBackoff","Subject","JwtHelperService","provider","throwError","OauthBrowser","OauthCordova","router","Router","trigger","transition","query","style","group","animate","delay","HttpHeaders","BehaviorSubject"],"mappings":"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"}
